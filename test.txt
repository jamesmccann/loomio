diff --git a/.gitignore b/.gitignore
index 6a4529a..85df862 100644
--- a/.gitignore
+++ b/.gitignore
@@ -17,4 +17,3 @@ public/images
 Session.vim
 *.sql
 .env
-.idea
diff --git a/Gemfile b/Gemfile
index 3ef2d9c..a0daaff 100644
--- a/Gemfile
+++ b/Gemfile
@@ -1,98 +1,102 @@
 source 'http://rubygems.org'
 
-gem 'rails', '~> 3.2.13'
-gem 'haml-rails', '~> 0.4'
+gem 'rails', '~> 3.2.12'
+gem "haml-rails"
 gem 'devise', '~> 2.2.3'
 gem 'devise_invitable', '~> 1.0.0'
 gem 'pg', '~> 0.14.1'
-gem 'capistrano', '~> 2.9.0'
-gem 'jquery-rails', '~> 1.0.19'
-gem 'jquery-scrollto-rails', '~> 1.4.2'
-gem 'inherited_resources', '~> 1.3.0'
+gem 'capistrano'
+gem 'jquery-rails'
+gem "jquery-scrollto-rails"
+gem 'inherited_resources'
 gem 'formtastic' # Deprecated - use simple_form instead.
-gem 'simple_form', '~> 2.0.4'
-gem 'client_side_validations', '~> 3.2.1'
-gem 'client_side_validations-simple_form', '~> 2.0.1'
-gem 'jqplot-rails', '~> 0.1'
-gem 'rails-backbone', '~> 0.7.2'
-gem 'coffee-filter', '~> 0.1.1'
-gem 'aasm', '~> 3.0.3'
-gem 'cancan', '~> 1.6.7'
-gem 'acts_as_commentable_with_threading', '~> 1.1.2'
+gem 'simple_form', '~> 2.0.0'
+gem 'client_side_validations'
+gem 'client_side_validations-simple_form', '~> 2.0.0'
+gem 'jqplot-rails'
+gem "rails-backbone"
+gem 'coffee-filter'
+gem 'aasm'
+gem 'cancan'
+gem 'acts_as_commentable_with_threading'
 gem 'draper', '~> 0.11.1'
-gem 'exception_notification', '~> 2.6.1'
-gem 'browser', '~> 0.1.3'
-gem 'rmagick', '~> 2.13.1'
-gem 'gravtastic', '~> 3.2.6'
-gem 'paperclip', '~> 3.4.0'
-gem 'kaminari', '~> 0.13.0'
-gem 'activeadmin', '~> 0.4.3'
-gem 'nokogiri', '~> 1.5.9'
-gem 'redcarpet', '~> 2.1.1'
-gem 'rabl', '~> 0.7.3'
-gem 'twitter-text', '~> 1.5.0'
-gem 'jquery-atwho-rails', '~> 0.1.6'
-gem 'paper_trail', '~> 2.6.3'
-gem 'high_voltage', '~> 1.2.0'
-gem 'thin', '~> 1.4.1'
-gem 'rack-canonical-host', '~> 0.0.8'
-gem 'delayed_job_active_record', '~> 0.3.3'
-gem 'hirefireapp', '~> 0.0.8'
-gem 'foreman', '~> 0.60.2'
-gem 'aws-sdk', '~> 1.8.5'
-gem 'rinku', '~> 1.7.2'
+gem 'exception_notification'
+gem 'browser'
+gem 'rmagick'
+gem 'gravtastic'
+gem 'paperclip'
+gem 'kaminari'
+gem 'activeadmin'
+gem 'nokogiri'
+gem 'redcarpet', :git => 'https://github.com/vmg/redcarpet.git'
+gem 'rabl'
+gem 'twitter-text', :git => 'https://github.com/twitter/twitter-text-rb.git'
+gem 'jquery-atwho-rails'
+gem 'paper_trail', '~> 2'
+gem "high_voltage"
+gem 'thin'
+gem 'rack-canonical-host'
+gem 'delayed_job_active_record'
+gem 'hirefireapp'
+gem 'foreman'
+gem 'aws-sdk'
+gem 'rinku'
 
 # NOTE: sass-rails should be inside :assets group, but currently there is an issue with activeadmin
 #       which does not allow us to do this
 #
 #       https://github.com/rails/sass-rails/issues/38#issuecomment-2046678
-gem 'sass-rails',   '~> 3.2.6'
+gem 'sass-rails',   '~> 3.2.5'
 gem 'coffee-rails', '~> 3.2.2'
 
 # Gems used only for assets and not required
 # in production environments by default.
 group :assets do
-  gem 'bootstrap-sass', '~> 2.3.1.0'
-  gem 'uglifier', '~> 1.1.0'
-  gem 'modernizr-rails', '~> 2.6.2'
+  gem 'bootstrap-sass', '~>2.0.3'
+  gem 'uglifier', '>= 1.0.3'
+  gem 'modernizr-rails'
 end
 
 group :development, :test do
-  gem 'thin', '~> 1.4.1'
-  gem 'debugger', '~> 1.2.2'
-  gem 'factory_girl_rails', '~> 4.0'
-  gem 'faker', '~> 1.0.1'
-  gem 'rspec-rails', '~> 2.12.2'
-  gem 'shoulda-matchers', '~> 1.2.0'
-  gem 'capybara', '~> 1.1.4'
-  gem 'database_cleaner', '~> 0.9.1'
-  gem 'selenium-webdriver', '~> 2.25.0'
-  gem 'letter_opener', '~> 1.0.0'
-  gem 'mailcatcher', '~> 0.5.8'
+  gem 'thin'
+  gem 'debugger'
+  gem "factory_girl_rails", "~> 4.0"
+  gem 'faker'
+  gem 'rspec-rails'
+  gem 'ruby-prof', :git => 'https://github.com/wycats/ruby-prof.git'
+  gem 'shoulda-matchers'
+  gem 'capybara'
+  gem 'database_cleaner'
+  gem 'selenium-webdriver', '2.25.0'
+  gem 'letter_opener'
+  gem 'mailcatcher'
 end
 
 group :development do
-  gem 'meta_request', '~> 0.2.1'
-  gem 'better_errors', '~> 0.6.0'
-  gem 'guard', '~> 1.6.1'
-  gem 'guard-spork', '~> 1.4.1'
-  gem 'guard-rspec', '~> 2.3.3'
-  gem 'rb-inotify', '~> 0.8.8', :require => false
-  gem 'rb-fsevent', '~> 0.9.1', :require => false
-  gem 'rb-fchange', '~> 0.0.5', :require => false
-  gem 'launchy', '~> 2.0.5'
-  gem 'spork-rails', '~> 3.2.1'
-  gem 'awesome_print', '~> 1.0.2'
+  gem 'meta_request', '0.2.1'
+  gem 'better_errors'
+  gem 'guard'
+  gem 'guard-spork'
+  gem 'guard-rspec'
+  gem 'rb-inotify', :require => false
+  gem 'rb-fsevent', :require => false
+  gem 'rb-fchange', :require => false
+  gem 'launchy'
+  gem 'spork-rails'
+  gem 'awesome_print'
 end
 
 group :test do
-  gem 'cucumber-rails', '~> 1.3.0', :require => false
-  gem 'email_spec', '~> 1.2.1'
-  gem 'poltergeist', '~> 1.0.2'
-  gem 'webmock', '~> 1.9.0'
-  gem 'vcr', '~> 2.4.0'
+  gem 'cucumber-rails', :require => false
+  gem 'cane', :git => 'git://github.com/square/cane.git'
+  gem 'simplecov', :require => false
+  gem 'flay', :require => false
+  gem "rails_best_practices", :require => false
+  gem 'email_spec'
+  gem 'poltergeist', :git => 'https://github.com/jonleighton/poltergeist.git'
 end
 
 group :staging, :production do
-  gem 'newrelic_rpm', '~> 3.5.7.59'
+  gem 'newrelic_rpm'
+  gem 'aws-sdk'
 end
diff --git a/Gemfile.lock b/Gemfile.lock
index 41e3820..3ffbef9 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -1,3 +1,40 @@
+GIT
+  remote: git://github.com/square/cane.git
+  revision: 350777252265dc5345bb9b63727f13660a1127c2
+  specs:
+    cane (1.0.0)
+      tailor
+
+GIT
+  remote: https://github.com/jonleighton/poltergeist.git
+  revision: 5c2e092001074a8cf09f332d3714e9ba150bc8ca
+  specs:
+    poltergeist (1.0.2)
+      capybara (~> 1.1)
+      childprocess (~> 0.3)
+      faye-websocket (~> 0.4, >= 0.4.4)
+      http_parser.rb (~> 0.5.3)
+      multi_json (~> 1.0)
+
+GIT
+  remote: https://github.com/twitter/twitter-text-rb.git
+  revision: f0458ba4eee710140f04c059d70b0faf368e3b10
+  specs:
+    twitter-text (1.5.0)
+      activesupport
+
+GIT
+  remote: https://github.com/vmg/redcarpet.git
+  revision: e7f328cd38985da7e7441aff17813132ff0e479a
+  specs:
+    redcarpet (2.1.1)
+
+GIT
+  remote: https://github.com/wycats/ruby-prof.git
+  revision: ffae61a895531f9601dd302a3eb0abc58c2a5473
+  specs:
+    ruby-prof (0.11.0)
+
 GEM
   remote: http://rubygems.org/
   specs:
@@ -50,7 +87,8 @@ GEM
     awesome_nested_set (2.1.2)
       activerecord (>= 3.0.0)
     awesome_print (1.0.2)
-    aws-sdk (1.8.5)
+    aws-sdk (1.3.9)
+      httparty (~> 0.7)
       json (~> 1.4)
       nokogiri (>= 1.4.4)
       uuidtools (~> 2.1)
@@ -58,8 +96,7 @@ GEM
     better_errors (0.6.0)
       coderay (>= 1.0.0)
       erubis (>= 2.6.6)
-    bootstrap-sass (2.3.1.0)
-      sass (~> 3.2)
+    bootstrap-sass (2.0.3)
     bourbon (2.1.1)
       sass (>= 3.1)
     browser (0.1.3)
@@ -96,8 +133,8 @@ GEM
       coffee-script-source
       execjs
     coffee-script-source (1.1.3)
+    colored (1.2)
     columnize (0.3.6)
-    crack (0.3.2)
     cucumber (1.2.1)
       builder (>= 2.1.2)
       diff-lcs (>= 1.1.3)
@@ -151,9 +188,12 @@ GEM
     faker (1.0.1)
       i18n (~> 0.4)
     fastercsv (1.5.5)
-    faye-websocket (0.4.7)
+    faye-websocket (0.4.6)
       eventmachine (>= 0.12.0)
     ffi (1.3.1)
+    flay (1.4.3)
+      ruby_parser (~> 2.0)
+      sexp_processor (~> 3.0)
     foreman (0.60.2)
       thor (>= 0.13.6)
     formtastic (2.0.2)
@@ -173,18 +213,21 @@ GEM
       childprocess (>= 0.2.3)
       guard (>= 1.1)
       spork (>= 0.8.4)
-    haml (3.1.8)
-    haml-rails (0.4)
-      actionpack (>= 3.1, < 4.1)
-      activesupport (>= 3.1, < 4.1)
-      haml (>= 3.1, < 4.1)
-      railties (>= 3.1, < 4.1)
+    haml (3.1.4)
+    haml-rails (0.3.4)
+      actionpack (~> 3.0)
+      activesupport (~> 3.0)
+      haml (~> 3.0)
+      railties (~> 3.0)
     has_scope (0.5.1)
     high_voltage (1.2.0)
     highline (1.6.8)
     hike (1.2.1)
     hirefireapp (0.0.8)
     http_parser.rb (0.5.3)
+    httparty (0.8.3)
+      multi_json (~> 1.0)
+      multi_xml
     i18n (0.6.1)
     inherited_resources (1.3.0)
       has_scope (~> 0.5.0)
@@ -237,7 +280,8 @@ GEM
     method_source (0.8.1)
     mime-types (1.21)
     modernizr-rails (2.6.2)
-    multi_json (1.7.2)
+    multi_json (1.7.1)
+    multi_xml (0.5.1)
     net-scp (1.0.4)
       net-ssh (>= 1.99.1)
     net-sftp (2.0.5)
@@ -246,7 +290,7 @@ GEM
     net-ssh-gateway (1.1.0)
       net-ssh (>= 1.99.1)
     newrelic_rpm (3.5.7.59)
-    nokogiri (1.5.9)
+    nokogiri (1.5.6)
     orm_adapter (0.4.0)
     paper_trail (2.6.3)
       activerecord (~> 3.0)
@@ -258,15 +302,10 @@ GEM
       cocaine (~> 0.4.0)
       mime-types
     pg (0.14.1)
-    poltergeist (1.0.2)
-      capybara (~> 1.1)
-      childprocess (~> 0.3)
-      faye-websocket (~> 0.4, >= 0.4.4)
-      http_parser.rb (~> 0.5.3)
-      multi_json (~> 1.0)
     polyamorous (0.5.0)
       activerecord (~> 3.0)
     polyglot (0.3.3)
+    progressbar (0.10.0)
     pry (0.9.10)
       coderay (~> 1.0.5)
       method_source (~> 0.8)
@@ -300,6 +339,13 @@ GEM
       coffee-script (~> 2.2.0)
       ejs (~> 1.0.0)
       railties (>= 3.1.0)
+    rails_best_practices (1.9.0)
+      activesupport
+      colored
+      erubis
+      i18n
+      progressbar
+      sexp_processor
     railties (3.2.13)
       actionpack (= 3.2.13)
       activesupport (= 3.2.13)
@@ -307,7 +353,7 @@ GEM
       rake (>= 0.8.7)
       rdoc (~> 3.4)
       thor (>= 0.14.6, < 2.0)
-    rake (10.0.4)
+    rake (10.0.3)
     rb-fchange (0.0.5)
       ffi
     rb-fsevent (0.9.1)
@@ -315,7 +361,6 @@ GEM
       ffi (>= 0.5.0)
     rdoc (3.12.2)
       json (~> 1.4)
-    redcarpet (2.1.1)
     responders (0.6.4)
     rinku (1.7.2)
     rmagick (2.13.1)
@@ -334,9 +379,11 @@ GEM
       rspec-core (~> 2.12.0)
       rspec-expectations (~> 2.12.0)
       rspec-mocks (~> 2.12.0)
+    ruby_parser (2.3.1)
+      sexp_processor (~> 3.0)
     rubyzip (0.9.9)
-    sass (3.2.7)
-    sass-rails (3.2.6)
+    sass (3.1.11)
+    sass-rails (3.2.5)
       railties (~> 3.2.0)
       sass (>= 3.1.10)
       tilt (~> 1.3)
@@ -345,11 +392,16 @@ GEM
       libwebsocket (~> 0.1.3)
       multi_json (~> 1.0)
       rubyzip
+    sexp_processor (3.1.0)
     shoulda-matchers (1.2.0)
       activesupport (>= 3.0.0)
     simple_form (2.0.4)
       actionpack (~> 3.0)
       activemodel (~> 3.0)
+    simplecov (0.6.1)
+      multi_json (~> 1.0)
+      simplecov-html (~> 0.5.3)
+    simplecov-html (0.5.3)
     sinatra (1.3.3)
       rack (~> 1.3, >= 1.3.6)
       rack-protection (~> 1.2)
@@ -368,28 +420,25 @@ GEM
       rack (~> 1.0)
       tilt (~> 1.1, != 1.3.0)
     sqlite3 (1.3.6)
+    tailor (0.1.5)
+      term-ansicolor (>= 1.0.5)
+    term-ansicolor (1.0.7)
     thin (1.4.1)
       daemons (>= 1.0.9)
       eventmachine (>= 0.12.6)
       rack (>= 1.0.0)
-    thor (0.18.1)
+    thor (0.17.0)
     tilt (1.3.6)
     treetop (1.4.12)
       polyglot
       polyglot (>= 0.3.1)
-    twitter-text (1.5.0)
-      activesupport
     tzinfo (0.3.37)
     uglifier (1.1.0)
       execjs (>= 0.3.0)
       multi_json (>= 1.0.2)
     uuidtools (2.1.3)
-    vcr (2.4.0)
     warden (1.2.1)
       rack (>= 1.0)
-    webmock (1.9.3)
-      addressable (>= 2.2.7)
-      crack (>= 0.3.2)
     websocket (1.0.6)
     xpath (0.1.4)
       nokogiri (~> 1.3)
@@ -398,76 +447,79 @@ PLATFORMS
   ruby
 
 DEPENDENCIES
-  aasm (~> 3.0.3)
-  activeadmin (~> 0.4.3)
-  acts_as_commentable_with_threading (~> 1.1.2)
-  awesome_print (~> 1.0.2)
-  aws-sdk (~> 1.8.5)
-  better_errors (~> 0.6.0)
-  bootstrap-sass (~> 2.3.1.0)
-  browser (~> 0.1.3)
-  cancan (~> 1.6.7)
-  capistrano (~> 2.9.0)
-  capybara (~> 1.1.4)
-  client_side_validations (~> 3.2.1)
-  client_side_validations-simple_form (~> 2.0.1)
-  coffee-filter (~> 0.1.1)
+  aasm
+  activeadmin
+  acts_as_commentable_with_threading
+  awesome_print
+  aws-sdk
+  better_errors
+  bootstrap-sass (~> 2.0.3)
+  browser
+  cancan
+  cane!
+  capistrano
+  capybara
+  client_side_validations
+  client_side_validations-simple_form (~> 2.0.0)
+  coffee-filter
   coffee-rails (~> 3.2.2)
-  cucumber-rails (~> 1.3.0)
-  database_cleaner (~> 0.9.1)
-  debugger (~> 1.2.2)
-  delayed_job_active_record (~> 0.3.3)
+  cucumber-rails
+  database_cleaner
+  debugger
+  delayed_job_active_record
   devise (~> 2.2.3)
   devise_invitable (~> 1.0.0)
   draper (~> 0.11.1)
-  email_spec (~> 1.2.1)
-  exception_notification (~> 2.6.1)
+  email_spec
+  exception_notification
   factory_girl_rails (~> 4.0)
-  faker (~> 1.0.1)
-  foreman (~> 0.60.2)
+  faker
+  flay
+  foreman
   formtastic
-  gravtastic (~> 3.2.6)
-  guard (~> 1.6.1)
-  guard-rspec (~> 2.3.3)
-  guard-spork (~> 1.4.1)
-  haml-rails (~> 0.4)
-  high_voltage (~> 1.2.0)
-  hirefireapp (~> 0.0.8)
-  inherited_resources (~> 1.3.0)
-  jqplot-rails (~> 0.1)
-  jquery-atwho-rails (~> 0.1.6)
-  jquery-rails (~> 1.0.19)
-  jquery-scrollto-rails (~> 1.4.2)
-  kaminari (~> 0.13.0)
-  launchy (~> 2.0.5)
-  letter_opener (~> 1.0.0)
-  mailcatcher (~> 0.5.8)
-  meta_request (~> 0.2.1)
-  modernizr-rails (~> 2.6.2)
-  newrelic_rpm (~> 3.5.7.59)
-  nokogiri (~> 1.5.9)
-  paper_trail (~> 2.6.3)
-  paperclip (~> 3.4.0)
+  gravtastic
+  guard
+  guard-rspec
+  guard-spork
+  haml-rails
+  high_voltage
+  hirefireapp
+  inherited_resources
+  jqplot-rails
+  jquery-atwho-rails
+  jquery-rails
+  jquery-scrollto-rails
+  kaminari
+  launchy
+  letter_opener
+  mailcatcher
+  meta_request (= 0.2.1)
+  modernizr-rails
+  newrelic_rpm
+  nokogiri
+  paper_trail (~> 2)
+  paperclip
   pg (~> 0.14.1)
-  poltergeist (~> 1.0.2)
-  rabl (~> 0.7.3)
-  rack-canonical-host (~> 0.0.8)
-  rails (~> 3.2.13)
-  rails-backbone (~> 0.7.2)
-  rb-fchange (~> 0.0.5)
-  rb-fsevent (~> 0.9.1)
-  rb-inotify (~> 0.8.8)
-  redcarpet (~> 2.1.1)
-  rinku (~> 1.7.2)
-  rmagick (~> 2.13.1)
-  rspec-rails (~> 2.12.2)
-  sass-rails (~> 3.2.6)
-  selenium-webdriver (~> 2.25.0)
-  shoulda-matchers (~> 1.2.0)
-  simple_form (~> 2.0.4)
-  spork-rails (~> 3.2.1)
-  thin (~> 1.4.1)
-  twitter-text (~> 1.5.0)
-  uglifier (~> 1.1.0)
-  vcr (~> 2.4.0)
-  webmock (~> 1.9.0)
+  poltergeist!
+  rabl
+  rack-canonical-host
+  rails (~> 3.2.12)
+  rails-backbone
+  rails_best_practices
+  rb-fchange
+  rb-fsevent
+  rb-inotify
+  redcarpet!
+  rinku
+  rmagick
+  rspec-rails
+  ruby-prof!
+  sass-rails (~> 3.2.5)
+  selenium-webdriver (= 2.25.0)
+  shoulda-matchers
+  simple_form (~> 2.0.0)
+  simplecov
+  spork-rails
+  thin
+  twitter-text!
+  uglifier (>= 1.0.3)
diff --git a/app/admin/dashboards.rb b/app/admin/dashboards.rb
index 15d286b..cb9c43f 100644
--- a/app/admin/dashboards.rb
+++ b/app/admin/dashboards.rb
@@ -11,7 +11,7 @@ ActiveAdmin::Dashboards.build do
   end
 
   section "Members Per Group (average)", :priority => 3 do
-    h1{ Group.average("memberships_count").round unless Group.count == 0 }
+    h1{ Group.average("memberships_count").round }
   end
 
   section "Discussions", :priority => 4 do
diff --git a/app/assets/images/Next.png b/app/assets/images/Next.png
new file mode 100644
index 0000000..5182ed9
Binary files /dev/null and b/app/assets/images/Next.png differ
diff --git a/app/assets/images/previous.png b/app/assets/images/previous.png
new file mode 100644
index 0000000..856d8ee
Binary files /dev/null and b/app/assets/images/previous.png differ
diff --git a/app/assets/javascripts/application.js b/app/assets/javascripts/application.js
index 6fafd8d..85de354 100644
--- a/app/assets/javascripts/application.js
+++ b/app/assets/javascripts/application.js
@@ -13,6 +13,7 @@
 //= require lib/jquery.tokeninput
 //= require lib/jquery.mousewheel
 //= require lib/jquery.placeholder
+//= require lib/jquery.highlight
 //= require scrollTo
 //= require rails.validations
 //= require rails.validations.simple_form
@@ -30,7 +31,6 @@
 //= require motions
 //= require users
 //= require notifications
-//= require dashboard
 //= require votes
 //= require jquery.atwho
 //= require pop-over
diff --git a/app/assets/javascripts/dashboard.js.coffee b/app/assets/javascripts/dashboard.js.coffee
deleted file mode 100644
index 6ccacb3..0000000
--- a/app/assets/javascripts/dashboard.js.coffee
+++ /dev/null
@@ -1,29 +0,0 @@
-#*** ajax for discussions ***
-
-# discussions
-$ ->
-  # params = Application.getPageParam()
-  params = ""
-  $('#user-discussions').load("/discussions" + params, ->
-    Application.convertUtcToRelativeTime()
-    $("#user-discussions").removeClass('hidden')
-    $("#discussions-loading").addClass('hidden')
-  )
-  $("#all-discussions-loading").addClass('hidden')
-$ ->
-  $(document).on('click', '#user-discussions .pagination a', (e)->
-    unless $(this).parent().hasClass("gap")
-      # if Application.html5.supported
-      #   window.history.pushState("stateObj", "title_ignored", Application.getNextURL($(this).attr("href")))
-      $("#discussion-list").addClass('hidden')
-      $("#discussions-with-motions").hide()
-      $("#discussions-loading").removeClass('hidden')
-      $('#user-discussions').load($(this).attr('href'), ->
-        Application.convertUtcToRelativeTime()
-        if document.URL.indexOf("page") == -1
-          $("#discussions-with-motions").show()
-        $("#discussion-list").removeClass('hidden')
-        $("#discussions-loading").addClass('hidden')
-      )
-      e.preventDefault()
-  )
diff --git a/app/assets/javascripts/groups.js.coffee b/app/assets/javascripts/groups.js.coffee
index 56bd902..597b3df 100644
--- a/app/assets/javascripts/groups.js.coffee
+++ b/app/assets/javascripts/groups.js.coffee
@@ -1,37 +1,47 @@
-$ ->
-  if $("body.groups.show").length > 0
-    $("#membership-requested").hover(
-      (e) ->
-        $(this).text("Cancel Request")
-      (e) ->
-        $(this).text("Membership Requested")
-    )
+#*** ajax for discussions ***
 
-#*** edit privacy settings from dropdown ***
+# discussions
 $ ->
-  if $("#privacy-settings-form").length > 0
-    $(".privacy-item").click((event) ->
-        $('#viewable_by').val($(this).children().attr('class'))
-        $(".privacy-item").find('.icon-ok').removeClass('icon-ok')
-        $(this).children().first().children().addClass('icon-ok')
-        $("#privacy-settings-form").submit()
-        event.preventDefault()
-    )
+  load_discussions()
 
-#*** ajax for discussions on group page ***
-$ ->
+load_discussions = () ->
+  params = ""
   if $("body.groups.show").length > 0 && $('#group-discussions').html() != null
-    idStr = new Array
-    idStr = $('#group-discussions').children().attr('class').split('_')
-    # params = Application.getPageParam()
-    params = ""
-    $('#group-discussions').load("/groups/#{idStr[1]}/discussions" + params, ->
+    idStr = $('#group-discussions').attr('data-group')
+    $('#group-discussions').load("/groups/#{idStr}/discussions" + params, ->
       Application.convertUtcToRelativeTime()
       $("#group-discussions").removeClass('hidden')
       $("#discussions-loading").addClass('hidden')
       activate_discussions_tooltips()
     )
-    $("#all-discussions-loading").addClass('hidden')
+  else
+    $('#user-discussions').load("/discussions" + params, ->
+      Application.convertUtcToRelativeTime()
+      $("#user-discussions").removeClass('hidden')
+      $("#discussions-loading").addClass('hidden')
+    )
+  $("#all-discussions-loading").addClass('hidden')  
+
+$ ->
+  $(document).on('click', '#user-discussions .pagination a', (e)->
+    unless $(this).parent().hasClass("gap")
+      # if Application.html5.supported
+      #   window.history.pushState("stateObj", "title_ignored", Application.getNextURL($(this).attr("href")))
+      $("#discussion-list").addClass('hidden')
+      $("#discussions-with-motions").hide()
+      $("#discussions-loading").removeClass('hidden')
+      $('#user-discussions').load($(this).attr('href'), ->
+        Application.convertUtcToRelativeTime()
+        if document.URL.indexOf("page") == -1
+          $("#discussions-with-motions").show()
+        $("#discussion-list").removeClass('hidden')
+        $("#discussions-loading").addClass('hidden')
+        term = $("#discussions-search-filter-input").val()
+        if term.length >= 3
+          $(".discussion-title .title").highlight(term)  
+      )
+      e.preventDefault()
+  )
 
 $ ->
   if $("body.groups.show").length > 0
@@ -45,12 +55,77 @@ $ ->
           Application.convertUtcToRelativeTime()
           $("#discussion-list").removeClass('hidden')
           $("#discussions-loading").addClass('hidden')
+          term = $("#discussions-search-filter-input").val()
+          if term.length >= 3
+            $(".discussion-title .title").highlight(term)   
           activate_discussions_tooltips()
         )
         e.preventDefault()
     )
 
-# adds bootstrap popovers to group activity indicators
+searchInputTimer = undefined
+inputInterval = 500
+
+# ajax for discussions filter/search input
+$ ->
+  $("#discussions-search-filter-input").keyup ->
+    clearTimeout searchInputTimer
+    if $("#discussions-search-filter-input").val().length >= 3 
+      #wait till 'finished typing' - don't hit the server on every keypress
+      searchInputTimer = setTimeout(discussions_filter, inputInterval)
+    else
+      #remove filter - load all discussions and unhighlight
+      load_discussions()
+      $("#discussions-with-motions").removeClass('hidden')
+      $(".discussion-title .title").unhighlight()
+
+discussions_filter = () ->
+    term = $("#discussions-search-filter-input").val()
+    params = "?query=" + encodeURIComponent(term)
+    if $("body.groups.show").length > 0 && $('#group-discussions').html() != null
+      params += "&group_id=" + $('#group-discussions').attr('data-group') 
+      $("#all-discussions-loading").addClass('hidden')
+      $("#group-discussions").addClass('hidden')
+      $("#discussions-with-motions").addClass('hidden')
+      $('#discussions-loading').removeClass('hidden')
+      $('#group-discussions').load("/discussions/search" + params, ->
+        Application.convertUtcToRelativeTime()
+        $("#group-discussions").removeClass('hidden')
+        $("#discussions-loading").addClass('hidden')
+        $(".discussion-title .title").highlight(term)
+      )
+    else
+      $("#all-discussions-loading").addClass('hidden')
+      $('#user-discussions').addClass('hidden')
+      $("#discussions-with-motions").addClass('hidden')
+      $('#discussions-loading').removeClass('hidden')
+      $('#user-discussions').load("/discussions/search" + params, ->
+        Application.convertUtcToRelativeTime()
+        $("#user-discussions").removeClass('hidden')
+        $("#discussions-loading").addClass('hidden')
+        $(".discussion-title .title").highlight(term)
+      )
+
+$ ->
+  if $("body.groups.show").length > 0
+    $("#membership-requested").hover(
+      (e) ->
+        $(this).text("Cancel Request")
+      (e) ->
+        $(this).text("Membership Requested")
+    )
+
+#*** edit privacy settings from dropdown ***
+$ ->
+  if $("#privacy-settings-form").length > 0
+    $(".privacy-item").click((event) ->
+        $('#viewable_by').val($(this).children().attr('class'))
+        $(".privacy-item").find('.icon-ok').removeClass('icon-ok')
+        $(this).children().first().children().addClass('icon-ok')
+        $("#privacy-settings-form").submit()
+        event.preventDefault()
+    )
+
 activate_discussions_tooltips = () ->
   $(".unread-group-activity").tooltip
     placement: "top"
diff --git a/app/assets/javascripts/lib/jquery.highlight.js b/app/assets/javascripts/lib/jquery.highlight.js
new file mode 100644
index 0000000..9dcf3c7
--- /dev/null
+++ b/app/assets/javascripts/lib/jquery.highlight.js
@@ -0,0 +1,108 @@
+/*
+ * jQuery Highlight plugin
+ *
+ * Based on highlight v3 by Johann Burkard
+ * http://johannburkard.de/blog/programming/javascript/highlight-javascript-text-higlighting-jquery-plugin.html
+ *
+ * Code a little bit refactored and cleaned (in my humble opinion).
+ * Most important changes:
+ *  - has an option to highlight only entire words (wordsOnly - false by default),
+ *  - has an option to be case sensitive (caseSensitive - false by default)
+ *  - highlight element tag and class names can be specified in options
+ *
+ * Usage:
+ *   // wrap every occurrance of text 'lorem' in content
+ *   // with <span class='highlight'> (default options)
+ *   $('#content').highlight('lorem');
+ *
+ *   // search for and highlight more terms at once
+ *   // so you can save some time on traversing DOM
+ *   $('#content').highlight(['lorem', 'ipsum']);
+ *   $('#content').highlight('lorem ipsum');
+ *
+ *   // search only for entire word 'lorem'
+ *   $('#content').highlight('lorem', { wordsOnly: true });
+ *
+ *   // don't ignore case during search of term 'lorem'
+ *   $('#content').highlight('lorem', { caseSensitive: true });
+ *
+ *   // wrap every occurrance of term 'ipsum' in content
+ *   // with <em class='important'>
+ *   $('#content').highlight('ipsum', { element: 'em', className: 'important' });
+ *
+ *   // remove default highlight
+ *   $('#content').unhighlight();
+ *
+ *   // remove custom highlight
+ *   $('#content').unhighlight({ element: 'em', className: 'important' });
+ *
+ *
+ * Copyright (c) 2009 Bartek Szopka
+ *
+ * Licensed under MIT license.
+ *
+ */
+
+jQuery.extend({
+    highlight: function (node, re, nodeName, className) {
+        if (node.nodeType === 3) {
+            var match = node.data.match(re);
+            if (match) {
+                var highlight = document.createElement(nodeName || 'span');
+                highlight.className = className || 'highlight';
+                var wordNode = node.splitText(match.index);
+                wordNode.splitText(match[0].length);
+                var wordClone = wordNode.cloneNode(true);
+                highlight.appendChild(wordClone);
+                wordNode.parentNode.replaceChild(highlight, wordNode);
+                return 1; //skip added node in parent
+            }
+        } else if ((node.nodeType === 1 && node.childNodes) && // only element nodes that have children
+                !/(script|style)/i.test(node.tagName) && // ignore script and style nodes
+                !(node.tagName === nodeName.toUpperCase() && node.className === className)) { // skip if already highlighted
+            for (var i = 0; i < node.childNodes.length; i++) {
+                i += jQuery.highlight(node.childNodes[i], re, nodeName, className);
+            }
+        }
+        return 0;
+    }
+});
+
+jQuery.fn.unhighlight = function (options) {
+    var settings = { className: 'highlight', element: 'span' };
+    jQuery.extend(settings, options);
+
+    return this.find(settings.element + "." + settings.className).each(function () {
+        var parent = this.parentNode;
+        parent.replaceChild(this.firstChild, this);
+        parent.normalize();
+    }).end();
+};
+
+jQuery.fn.highlight = function (words, options) {
+    var settings = { className: 'highlight', element: 'span', caseSensitive: false, wordsOnly: false };
+    jQuery.extend(settings, options);
+    
+    if (words.constructor === String) {
+        words = [words];
+    }
+    words = jQuery.grep(words, function(word, i){
+      return word != '';
+    });
+    words = jQuery.map(words, function(word, i) {
+      return word.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
+    });
+    if (words.length == 0) { return this; };
+
+    var flag = settings.caseSensitive ? "" : "i";
+    var pattern = "(" + words.join("|") + ")";
+    if (settings.wordsOnly) {
+        pattern = "\\b" + pattern + "\\b";
+    }
+    var re = new RegExp(pattern, flag);
+    
+    return this.each(function () {
+        jQuery.highlight(this, re, settings.element, settings.className);
+    });
+};
+
diff --git a/app/assets/javascripts/main.js.coffee b/app/assets/javascripts/main.js.coffee
index 13bc51a..9a80fb7 100644
--- a/app/assets/javascripts/main.js.coffee
+++ b/app/assets/javascripts/main.js.coffee
@@ -86,9 +86,9 @@ $ ->
       <input name='_method' type='hidden' value='#{methodText}'>
       <input name='authenticity_token' type='hidden' value=#{csrf}></div>
       <div class='modal-body center'> #{bodyText}</div><div class='modal-footer'>&nbsp;
-      <input class= 'btn #{buttonType}', name='commit' type='submit' value='#{titleText}' id='confirm-action'
+      <input class= 'btn btn-small #{buttonType}', name='commit' type='submit' value='#{titleText}' id='confirm-action'
              data-disable-with='#{titleText}'>
-      <a data-dismiss='modal' class='btn'>Cancel</a></div></div></form>"
+      <a data-dismiss='modal' class='btn btn-small'>Cancel</a></div></div></form>"
     )
     $('#confirm-dialog-modal').modal('show')
     $('#confirm-dialog-modal').on('hidden', ->
@@ -258,12 +258,12 @@ displayGraph = (this_pie, graph_id, data)->
 #*** hide/show mini-graph popovers
 $ ->
   if $("body.groups.show").length > 0 || $("body.dashboard.show").length > 0
-    $(".motion-popover-link").click((event) ->
+    $(".selector-pie-link").click((event) ->
       $(this).find('.pie').tooltip('hide')
       if $(this).find(".popover").html() == null
         event.stopPropagation()
         currentPie = this
-        $('.motion-popover-link').each(() ->
+        $('.selector-pie-link').each(() ->
           unless this == currentPie
             $(this).popover('hide')
         )
@@ -273,7 +273,7 @@ $ ->
 $ ->
   if $("body.groups.show").length > 0 || $("body.dashboard.show").length > 0
     $(document).click((event) ->
-      $('.motion-popover-link').popover('hide')
+      $('.selector-pie-link').popover('hide')
     )
 
 #*** closed motions modal***
diff --git a/app/assets/javascripts/pop-over.js.coffee b/app/assets/javascripts/pop-over.js.coffee
index 1400589..675b474 100644
--- a/app/assets/javascripts/pop-over.js.coffee
+++ b/app/assets/javascripts/pop-over.js.coffee
@@ -7,14 +7,12 @@ $ ->
 # adds bootstrap popovers to vote buttons
 $ ->
   $(".position").popover
-    placement: "top",
-    trigger: "hover"
+    placement: "top"
 
 #adds bootstrap popovers to preview pies
 $ ->
   if $("body.groups.show").length > 0 || $("body.dashboard.show").length > 0
-    $(".motion-popover-link").popover
-      html: true,
+    $(".selector-pie-link").popover
       placement: "right",
       trigger: "manual"
 
diff --git a/app/assets/stylesheets/discussions.css.scss b/app/assets/stylesheets/discussions.css.scss
index 966bd97..69c6add 100644
--- a/app/assets/stylesheets/discussions.css.scss
+++ b/app/assets/stylesheets/discussions.css.scss
@@ -355,7 +355,7 @@ li.selector-item .discussion-preview:hover {
     float: left;
     padding: 5px 0 5px 5px;
   }
-  .motion-popover-link {
+  .selector-pie-link {
     width: 42px;
     height: 47px;
     cursor: pointer;
@@ -439,3 +439,11 @@ li.selector-item .discussion-preview:hover {
   border-bottom: 1px solid $light-grey;
   min-height: 40px;
 }
+.discussions-search-form {
+  float: right;
+  margin-right: 265px;
+}
+.highlight {
+  font-weight: 600;
+  text-decoration: underline;
+}
diff --git a/app/assets/stylesheets/header.css.scss b/app/assets/stylesheets/header.css.scss
index 1c8d1a2..22812d6 100644
--- a/app/assets/stylesheets/header.css.scss
+++ b/app/assets/stylesheets/header.css.scss
@@ -1,17 +1,5 @@
 @import "settings";
 
-.dropdown-menu {
-  a {
-    clear: both;
-    color: #555;
-    display: block;
-    font-weight: normal;
-    line-height: 18px;
-    padding: 3px 15px;
-    white-space: nowrap;
-  }
-  li > a:hover, .active > a, .active > a:hover { background-color: #08c; }
-}
 
 .main-container {
   margin: auto;
@@ -21,6 +9,12 @@
 }
 
 .logged-in-navigation {
+  .navbar-inner {
+    background-image: url("title-bar-gradient.jpg");
+    background-repeat: repeat-x;
+    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.25), 0 -1px 0 rgba(0, 0, 0, 0.1) inset;
+    z-index: 3;
+  }
   .nav-item-icon {
     padding-right: 5px;
     opacity: 0.8;
diff --git a/app/assets/stylesheets/main.css.scss b/app/assets/stylesheets/main.css.scss
index 81090d7..5a71752 100644
--- a/app/assets/stylesheets/main.css.scss
+++ b/app/assets/stylesheets/main.css.scss
@@ -10,6 +10,7 @@ ul, ol, li {
   padding: 0;
 }
 ul { list-style: none; }
+.dropdown-menu a { color: #555; }
 
 html { height: 100%; }
 
@@ -22,31 +23,6 @@ hr {
   margin: 1px;
 }
 
-// Override bootstrap 2.3 headers with 2.0.3 styles
-h1, h2, h3, h4, h5, h6 {
-  margin: 0;
-  font-family: inherit;
-  font-weight: bold;
-  color: inherit;
-  text-rendering: optimizelegibility;
-}
-h1 {
-  font-size: 30px;
-  line-height: 36px;
-}
-h2 {
-  font-size: 24px;
-  line-height: 36px;
-}
-h3 {
-  font-size: 18px;
-  line-height: 27px;
-}
-h4 { font-size: 14px; }
-h5 { font-size: 12px; }
-h6 { font-size: 11px; }
-h4, h5, h6 { line-height: 18px; }
-
 .group-title h2 {
   color: #777;
   display: inline;
@@ -64,12 +40,7 @@ h4, h5, h6 { line-height: 18px; }
   .group-link-activity { float: right; }
   .button-icon { padding: 0 }
 }
-.activity-item-body .popover h3 { padding: 8px 14px; }
-
-.popover {
-  width: 276px;
-  z-index: 10000;
-}
+.popover { z-index: 10000; }
 
 .sub_group {font-size: $font-tiny;}
 
@@ -156,9 +127,42 @@ li.selector-item a.selector-link:hover {
   text-decoration: none;
   .group-activity-indicator.unread-group-activity { background-color: $group-activity; }
 }
+.pagination {
+  a {
+    color: $mid-grey;
+    border: 1px solid $light-grey;
+    border-left-width: 0;
+  }
+  margin: 2px 0 5px 0;
+}
+.pagination li.page a {
+  background-position: 16px 10px;
+}
+.pagination ul{
+  border-top: 0px;
+}
+.pagination li.next_page, li.prev {
+  a {
+    text-indent: -100em;
+    overflow: hidden;
+    padding: 0 5px;
+    width: 29px;
+  }
+}
+.pagination li.prev a {
+  background: url(previous.png) no-repeat;
+  background-position: 16px 10px;
+}
+.pagination li.next_page a {
+  background: url(Next.png) no-repeat;
+  background-position: 16px 10px;
+}
 
 .alert {
   margin: 10px 0;
+  // position: relative;
+  // top: 0px;
+  // bottom: 20px;
 }
 
 // misc (move stuff out of here..)
diff --git a/app/assets/stylesheets/motions.css.scss b/app/assets/stylesheets/motions.css.scss
index e2edab6..c1f10f8 100644
--- a/app/assets/stylesheets/motions.css.scss
+++ b/app/assets/stylesheets/motions.css.scss
@@ -183,17 +183,14 @@
   #vote-statement .character-counter { width: 528px; }
   .inputError { margin-left: 0px; height: 65px; }
   .control-group { padding-top: 0px; padding-bottom: 0px; }
-  .vote-buttons {
-    .btn {
-      float: left;
-      width: 40px;
-      @include box-shadow(1px, 1px, 3px, $mid-grey);
-      border: 1px solid $light-grey;
-      @include border-radius(5px);
-      padding: 3px;
-      margin: 10px 10px 15px 0;
-    }
-    .popover-title { font-size: 1.2em; font-weight: 700; }
+  .vote-buttons .btn {
+    float: left;
+    width: 40px;
+    @include box-shadow(1px, 1px, 3px, $mid-grey);
+    border: 1px solid $light-grey;
+    @include border-radius(5px);
+    padding: 3px;
+    margin: 10px 10px 15px 0;
   }
   .votes-table { padding-bottom: 10px; }
   .votes-table .position-row {
diff --git a/app/assets/stylesheets/notifications.css.scss b/app/assets/stylesheets/notifications.css.scss
index 63683e4..1013e0e 100644
--- a/app/assets/stylesheets/notifications.css.scss
+++ b/app/assets/stylesheets/notifications.css.scss
@@ -37,7 +37,6 @@
     padding-bottom: 0;
   }
   #notifications-container .dropdown-menu a {
-    min-height: 42px;
     padding-left: 5px;
   }
   #notifications-container .dropdown-menu h3 {
@@ -70,6 +69,7 @@
     height: 390px;
     .notification-item {
       background-color: $unhighlighted;
+      min-height: 48px;
     }
     .notification-item.unread {
       background-color: $highlighted;
diff --git a/app/controllers/discussions_controller.rb b/app/controllers/discussions_controller.rb
index e8968dd..8901a08 100644
--- a/app/controllers/discussions_controller.rb
+++ b/app/controllers/discussions_controller.rb
@@ -59,52 +59,42 @@ class DiscussionsController < GroupBaseController
     @discussion = Discussion.find(params[:id])
     @last_collaborator = User.find @discussion.originator.to_i if @discussion.has_previous_versions?
     @group = GroupDecorator.new(@discussion.group)
-    @vote = Vote.new
     @current_motion = @discussion.current_motion
+    @vote = Vote.new
     @activity = @discussion.activity
     assign_meta_data
-    if params[:proposal]
-      @displayed_motion = Motion.find(params[:proposal])
-    elsif @current_motion
-      @displayed_motion = @current_motion
+    if (not params[:proposal])
+      if @current_motion
+        @unique_votes = Vote.unique_votes(@current_motion)
+        @votes_for_graph = @current_motion.votes_graph_ready
+        @user_already_voted = @current_motion.user_has_voted?(current_user)
+      end
+    else
+      @selected_motion = Motion.find(params[:proposal])
+      @user_already_voted = @selected_motion.user_has_voted?(current_user)
+      @votes_for_graph = @selected_motion.votes_graph_ready
     end
+
     if current_user
-      @destination_groups = DiscussionMover.destination_groups(@discussion.group, current_user)
       @uses_markdown = current_user.uses_markdown?
-      ViewLogger.motion_viewed(@current_motion, current_user) if @current_motion
-      ViewLogger.discussion_viewed(@discussion, current_user)
-    end
-  end
-
-  def move
-    @discussion = Discussion.find(params[:id])
-    destination = Group.find(params[:discussion][:group_id])
-    @discussion.group_id = params[:discussion][:group_id]
-    if DiscussionMover.can_move?(current_user, destination) && @discussion.save!
-      flash[:success] = "Discussion successfully moved."
-    else
-      flash[:error] = "Discussion could not be moved."
+      current_user.update_motion_read_log(@current_motion) if @current_motion
+      current_user.update_discussion_read_log(@discussion)
+      @discussion.update_total_views
     end
-    redirect_to @discussion
   end
 
   def add_comment
     @discussion = Discussion.find(params[:id])
     comment = @discussion.add_comment(current_user, params[:comment])
-    ViewLogger.discussion_viewed(@discussion, current_user)
+    current_user.update_discussion_read_log(@discussion)
   end
 
   def new_proposal
+    @motion = Motion.new
     discussion = Discussion.find(params[:id])
-    if discussion.current_motion
-      redirect_to discussion
-      flash[:notice] = "A current proposal already exists for this disscussion."
-    else
-      @motion = Motion.new
-      @motion.discussion = discussion
-      @group = GroupDecorator.new(discussion.group)
-      render 'motions/new'
-    end
+    @motion.discussion = discussion
+    @group = GroupDecorator.new(discussion.group)
+    render 'motions/new'
   end
 
   def edit_description
@@ -153,6 +143,24 @@ class DiscussionsController < GroupBaseController
     end
   end
 
+  def search
+    if params[:query].present? 
+      query = params[:query]
+      if params[:group_id].present?
+        @group = Group.find(params[:group_id])
+        @discussions = Queries::VisibleDiscussions.for(@group, current_user).
+                         where_title_is_like(query).page(params[:page]).per(10)
+      else
+        authenticate_user!
+        @discussions = current_user.motions_or_discussions_by_query(query).page(params[:page]).per(10)
+      end
+      @no_discussions_found = (@discussions.count == 0)
+      render "index", :layout => false if request.xhr?
+    else
+      redirect_to :action => :index
+    end
+  end
+
   private
 
   def assign_meta_data
diff --git a/app/controllers/email_preferences_controller.rb b/app/controllers/email_preferences_controller.rb
deleted file mode 100644
index eaa0058..0000000
--- a/app/controllers/email_preferences_controller.rb
+++ /dev/null
@@ -1,21 +0,0 @@
-class EmailPreferencesController < BaseController
-  skip_before_filter :authenticate_user!
-  before_filter :authenticate_user_by_unsubscribe_token_or_fallback
-  defaults :instance_name => 'email_preferences'
-
-  def update
-    update!(:notice => "Your email settings have been updated."){ root_url }
-  end
-
-  private
-
-  def resource
-    @email_preferences ||= EmailPreferences.new(@restricted_user || current_user)
-  end
-
-  def authenticate_user_by_unsubscribe_token_or_fallback
-    unless (params[:unsubscribe_token].present? and @restricted_user = User.find_by_unsubscribe_token(params[:unsubscribe_token]))
-      authenticate_user!
-    end
-  end
-end
diff --git a/app/controllers/group_requests_controller.rb b/app/controllers/group_requests_controller.rb
index b243e61..eeb14fd 100644
--- a/app/controllers/group_requests_controller.rb
+++ b/app/controllers/group_requests_controller.rb
@@ -18,8 +18,8 @@ class GroupRequestsController < BaseController
   end
 
   def start_new_group
-    group_request = GroupRequest.find_by_token(params[:token])
-    if group_request.nil? or group_request.accepted?
+    group_request = GroupRequest.find(params[:id])
+    if group_request.token != params[:token] || group_request.accepted?
       render "invitation_accepted_error_page"
     else
       session[:start_new_group_token] = group_request.token
diff --git a/app/controllers/motions_controller.rb b/app/controllers/motions_controller.rb
index dc83095..adb7f5b 100644
--- a/app/controllers/motions_controller.rb
+++ b/app/controllers/motions_controller.rb
@@ -4,15 +4,10 @@ class MotionsController < GroupBaseController
   before_filter :check_group_read_permissions, :only => :show
 
   def create
-    if Discussion.find(params[:motion][:discussion_id]).current_motion
-      redirect_to @discussion
-      flash[:notice] = "A proposal has already been created"
-    else
-      @motion = current_user.authored_motions.new(params[:motion])
-      @motion.close_date = params[:motion][:close_date].to_datetime
-      @group = GroupDecorator.new(@motion.group)
-      authorize! :create, @motion
-    end
+    @motion = current_user.authored_motions.new(params[:motion])
+    @motion.close_date = params[:motion][:close_date].to_datetime
+    @group = GroupDecorator.new(@motion.group)
+    authorize! :create, @motion
     if @motion.save
       flash[:success] = "Proposal successfully created."
       redirect_to discussion_path(@motion.discussion)
@@ -87,7 +82,7 @@ class MotionsController < GroupBaseController
     @motion_activity = Integer(params[:motion_activity])
     if user_signed_in?
       @user = current_user
-      ViewLogger.motion_viewed(@motion, @user)
+      @user.update_motion_read_log(@motion)
     end
   end
 
diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb
index 691feb5..3106333 100644
--- a/app/controllers/users_controller.rb
+++ b/app/controllers/users_controller.rb
@@ -1,5 +1,6 @@
 class UsersController < BaseController
-  before_filter :authenticate_user!, except: [:new, :create]
+  before_filter :authenticate_user!, except: [:new, :create, :email_preferences, :update]
+  before_filter :authenticate_user_by_unsubscribe_token_or_fallback, only: [:email_preferences, :update]
 
   def new
     @user = User.new
@@ -13,7 +14,6 @@ class UsersController < BaseController
     if @group_request && (not @group_request.accepted?)
       @user = User.new(params[:user])
       if @user.save
-        @user.generate_username
         sign_in @user
         redirect_to group_path(@group_request.group)
       else
@@ -24,8 +24,13 @@ class UsersController < BaseController
     end
   end
 
+  def email_preferences
+    @user = @restricted_user || current_user
+  end
+
   def update
-    if current_user.update_attributes(params[:user])
+    @user = @restricted_user || current_user
+    if @user.update_attributes(params[:user])
       flash[:notice] = "Your settings have been updated."
       redirect_to :root
     else
@@ -92,4 +97,11 @@ class UsersController < BaseController
     current_user.save!
     redirect_to :back
   end
+
+  private
+  def authenticate_user_by_unsubscribe_token_or_fallback
+    unless (params[:unsubscribe_token].present? and @restricted_user = User.find_by_unsubscribe_token(params[:unsubscribe_token]))
+      authenticate_user!
+    end
+  end
 end
diff --git a/app/helpers/motions_helper.rb b/app/helpers/motions_helper.rb
index d9dfb10..5f1e302 100644
--- a/app/helpers/motions_helper.rb
+++ b/app/helpers/motions_helper.rb
@@ -7,8 +7,4 @@ module MotionsHelper
     motion_class = ["motion-preview", "clearfix"]
     motion_class.join(" ")
   end
-
-  def display_vote_buttons?(motion, user)
-    motion.voting? && (not motion.user_has_voted?(user)) && motion.group.users_include?(user)
-  end
 end
diff --git a/app/models/ability.rb b/app/models/ability.rb
index dac503d..20cde57 100644
--- a/app/models/ability.rb
+++ b/app/models/ability.rb
@@ -50,8 +50,8 @@ class Ability
 
     can :index, Discussion
     can :destroy, Discussion, group_id: user.adminable_group_ids
-    can :move, Discussion, group_id: user.adminable_group_ids
-    can [:add_comment, :new_proposal, :create, :edit_description, :edit_title, :show_description_history, :preview_version, :update_version], Discussion, :group_id => user.group_ids
+    can [:add_comment, :new_proposal, :create, :edit_description, :edit_title, 
+         :show_description_history, :preview_version, :update_version, :search], Discussion, :group_id => user.group_ids
 
     can :destroy, Comment, user_id: user.id
     can :destroy, Comment, :discussion => { group_id: user.adminable_group_ids }
diff --git a/app/models/discussion_read_log.rb b/app/models/discussion_read_log.rb
index 101c6c6..a22d68f 100644
--- a/app/models/discussion_read_log.rb
+++ b/app/models/discussion_read_log.rb
@@ -1,6 +1,4 @@
 class DiscussionReadLog < ActiveRecord::Base
-  attr_accessible :user_id, :discussion_id, :discussion_last_viewed_at
-
   belongs_to :user
   belongs_to :discussion
   validates_presence_of :discussion_last_viewed_at, :discussion_id, :user_id
diff --git a/app/models/motion.rb b/app/models/motion.rb
index edbc3d4..dd8726c 100644
--- a/app/models/motion.rb
+++ b/app/models/motion.rb
@@ -53,6 +53,10 @@ class Motion < ActiveRecord::Base
     group.users.where(User.arel_table[:id].not_eq(author.id))
   end
 
+  def user_has_voted?(user)
+    votes.map{|v| v.user.id}.include?(user.id)
+  end
+
   def with_votes
     votes if votes.size > 0
   end
@@ -70,7 +74,7 @@ class Motion < ActiveRecord::Base
     }.to_hash
   end
 
-  def votes_for_graph
+  def votes_graph_ready
     votes_for_graph = []
     votes_breakdown.each do |k, v|
       votes_for_graph.push ["#{k.capitalize} (#{v.size})", v.size, "#{k.capitalize}", [v.map{|b| b.user.email}]]
@@ -103,10 +107,6 @@ class Motion < ActiveRecord::Base
     end
   end
 
-  def unique_votes
-    Vote.unique_votes(self)
-  end
-
   # motion is closed by user
   def close_motion!(user=nil)
     close!
diff --git a/app/models/motion_read_log.rb b/app/models/motion_read_log.rb
index 7baacd1..142e0cc 100644
--- a/app/models/motion_read_log.rb
+++ b/app/models/motion_read_log.rb
@@ -1,12 +1,10 @@
 class MotionReadLog < ActiveRecord::Base
-  attr_accessible :user_id, :motion_id, :motion_last_viewed_at
-
   belongs_to :user
   belongs_to :motion
   validates_presence_of :motion_last_viewed_at, :motion_id, :user_id
-  validates_uniqueness_of :user_id, scope: :motion_id
+  validates_uniqueness_of :user_id, :scope => :motion_id
 
-  before_validation :set_motion_last_viewed_at_to_now, on: :create
+  before_validation :set_motion_last_viewed_at_to_now, :on => :create
 
   private
 
diff --git a/app/models/user.rb b/app/models/user.rb
index bdb08eb..c209d6f 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -52,6 +52,7 @@ class User < ActiveRecord::Base
            :conditions => { :access_level => Membership::MEMBER_ACCESS_LEVELS },
            :dependent => :destroy
 
+
   has_many :groups,
            :through => :memberships
   has_many :adminable_groups,
@@ -92,6 +93,12 @@ class User < ActiveRecord::Base
 
   has_many :notifications
 
+  has_many :discussion_read_logs,
+           :dependent => :destroy
+
+  has_many :motion_read_logs,
+           :dependent => :destroy
+
   # Setup accessible (or protected) attributes for your model
   attr_accessible :name, :avatar_kind, :email, :password, :password_confirmation, :remember_me,
                   :uploaded_avatar, :username, :subscribed_to_daily_activity_email, :subscribed_to_proposal_closure_notifications, 
@@ -100,7 +107,6 @@ class User < ActiveRecord::Base
   before_save :set_avatar_initials, :ensure_unsubscribe_token
   before_create :set_default_avatar_kind
   after_create :ensure_name_entry
-  before_destroy { |user| ViewLogger.remove_all_logs_for(user.id) }
 
   scope :daily_activity_email_recipients, where("subscribed_to_daily_activity_email IS TRUE AND invitation_token IS NULL")
   scope :sorted_by_name, order("lower(name)")
@@ -117,6 +123,22 @@ class User < ActiveRecord::Base
     memberships.where(:group_id => group.id, :subscribed_to_notification_emails => true).present?
   end
 
+  def group_email_preferences
+    #membership ids for memberships which have subscribed to the group emails
+    memberships.where(:subscribed_to_notification_emails => true).map(&:id)
+  end
+
+  def group_email_preferences=(ids)
+    ids = ids.delete_if(&:blank?).map(&:to_i)
+    memberships.where(:subscribed_to_notification_emails => true).each do |m|
+      m.update_attribute(:subscribed_to_notification_emails, false)
+    end
+
+    memberships.where(:id => ids).each do |m|
+      m.update_attribute(:subscribed_to_notification_emails, true)
+    end
+  end
+
   def get_vote_for(motion)
     Vote.where('motion_id = ? AND user_id = ?', motion.id, id).last
   end
@@ -202,6 +224,12 @@ class User < ActiveRecord::Base
       .order("last_comment_at DESC")
   end
 
+  def motions_or_discussions_by_query(title_query)
+    discussions
+        .where("discussions.title ILIKE ?", "%#{title_query}%")
+        .order("last_comment_at DESC")
+  end
+
   def self.loomio_helper_bot
     helper_bot = User.find_or_create_by_email('contact@loom.io')
     unless helper_bot.persisted?
@@ -212,6 +240,40 @@ class User < ActiveRecord::Base
     helper_bot
   end
 
+  def update_motion_read_log(motion)
+    log = MotionReadLog.where('motion_id = ? AND user_id = ?', motion.id, id).first
+    if log.nil?
+      motion_read_log = MotionReadLog.new
+      motion_read_log.user_id = id
+      motion_read_log.motion_id = motion.id
+      motion_read_log.save!
+    else
+      log.motion_last_viewed_at = Time.now
+      log.save!
+    end
+  end
+
+  def update_discussion_read_log(discussion)
+    log = DiscussionReadLog.where('discussion_id = ? AND user_id = ?', discussion.id, id).first
+    if log.nil?
+      discussion_read_log = DiscussionReadLog.new
+      discussion_read_log.user_id = id
+      discussion_read_log.discussion_id = discussion.id
+      discussion_read_log.save!
+    else
+      log.discussion_last_viewed_at = Time.now
+      log.save!
+    end
+  end
+
+  def update_group_last_viewed_at(group)
+    membership = group_membership(group)
+    if membership
+      membership.group_last_viewed_at = Time.now()
+      membership.save!
+    end
+  end
+
   def self.find_by_email(email)
     User.find(:first, :conditions => ["lower(email) = ?", email.downcase])
   end
diff --git a/app/views/application/_group_activity.html.haml b/app/views/application/_group_activity.html.haml
new file mode 100644
index 0000000..e4cf20a
--- /dev/null
+++ b/app/views/application/_group_activity.html.haml
@@ -0,0 +1,2 @@
+- if group.activity_since_last_viewed?(user)
+  .group-activity.button-icon.dot-icon
diff --git a/app/views/application/_group_dropdown_item.html.haml b/app/views/application/_group_dropdown_item.html.haml
index b0d559e..1f561f5 100644
--- a/app/views/application/_group_dropdown_item.html.haml
+++ b/app/views/application/_group_dropdown_item.html.haml
@@ -4,3 +4,4 @@
   %a.selector-link{ href: group_path(group) }
     .group-link.clearfix
       .group-link-name= group.name.length < 35 ? group.name : group.name[0..32]+'...'
+      .group-link-activity= render '/application/group_activity', user: current_user, group: group
diff --git a/app/views/application/_header.html.haml b/app/views/application/_header.html.haml
index f580001..34bd44a 100644
--- a/app/views/application/_header.html.haml
+++ b/app/views/application/_header.html.haml
@@ -1,5 +1,5 @@
-.logged-in-navigation
-  .navbar.navbar-inverse.navbar-fixed-top
+.logged-in-navigation 
+  .navbar.navbar-fixed-top
     .navbar-inner
       .container
         %ul.nav-bar-list.clearfix
diff --git a/app/views/application/_marketing_header.html.haml b/app/views/application/_marketing_header.html.haml
index 7ef1c0b..3c1f598 100644
--- a/app/views/application/_marketing_header.html.haml
+++ b/app/views/application/_marketing_header.html.haml
@@ -5,7 +5,7 @@
   - path_var = '/pages/home'
   - scroll_trigger = ''
 
-.navbar.navbar-inverse.navbar-fixed-top
+.navbar.navbar-fixed-top
   .navbar-inner
     .container
       %a.brand{href: "#{path_var}#top", class: scroll_trigger}
diff --git a/app/views/dashboard/_groups.html.haml b/app/views/dashboard/_groups.html.haml
index 43d2081..776b8f4 100644
--- a/app/views/dashboard/_groups.html.haml
+++ b/app/views/dashboard/_groups.html.haml
@@ -6,9 +6,11 @@
       %li
         .group-link.clearfix
           .group-link-name= link_to group.name, group_path(group), :class => 'view_'+group.viewable_by.to_s
+          .group-link-activity= render '/application/group_activity', user: current_user, group: group
         - if group.subgroups.size > 0
           - group.subgroups.each do |subgroup|
             - if (current_user && current_user.group_membership(subgroup))
               %li.sub-group
                 .group-link.clearfix
                   .group-link-name= link_to subgroup.name, group_path(subgroup), :class => 'view_'+subgroup.viewable_by.to_s
+                  .group-link-activity= render '/application/group_activity', user: current_user, group: subgroup
diff --git a/app/views/dashboard/show.html.haml b/app/views/dashboard/show.html.haml
index 635b33d..1863de8 100644
--- a/app/views/dashboard/show.html.haml
+++ b/app/views/dashboard/show.html.haml
@@ -2,6 +2,7 @@
   =render '/groups/title', group: nil
   .clearfix
     = icon_button(new_discussion_path, 'Start a discussion', '/assets/topic-18.png', 'start-new-discussion')
+    = render 'discussions/search_filter'
   .row.main-content
     %section.span8
       %ul.selector-list.bordered
diff --git a/app/views/discussions/_add_comment.html.haml b/app/views/discussions/_add_comment.html.haml
index 6b7e933..798b2c9 100644
--- a/app/views/discussions/_add_comment.html.haml
+++ b/app/views/discussions/_add_comment.html.haml
@@ -3,7 +3,7 @@
     = render 'avatar', user: current_user, size: "medium", kind: nil, id: nil
     #comment-input{ data: {group: @group.id} }
       = text_area_tag 'comment', "", id: 'new-comment', placeholder: "Say something..."
-      = submit_tag "Post comment", class: "btn submit", id: 'post-new-comment', :data => {:disable_with => "Post comment"}
+      = submit_tag "Post comment", class: "btn btn-small submit", id: 'post-new-comment', :data => {:disable_with => "Post comment"}
   .dropdown#markdown-dropdown
     %a.dropdown-toggle{href:'#markdown-dropdown', id:'markdown-dropdown-link', 'data-toggle'=> 'dropdown'}
       = markdown_img(@uses_markdown)
diff --git a/app/views/discussions/_discussion_preview.html.haml b/app/views/discussions/_discussion_preview.html.haml
index a5c058d..0d8c5c9 100644
--- a/app/views/discussions/_discussion_preview.html.haml
+++ b/app/views/discussions/_discussion_preview.html.haml
@@ -7,7 +7,8 @@
           - if current_user.group_membership(this_group) || this_group.nil?
             %div{:class => 'activity-icon ' + vote_icon_name(current_user.position(discussion.current_motion))}
       .discussion-title
-        = truncate(discussion.title, :length => 60, :separator => ' ')
+        .title
+          = truncate(discussion.title, :length => 60, :separator => ' ')
         .group-name= DiscussionDecorator.new(discussion).display_group_name(this_group)
       .large-icon.discussion-icon.activity-icon{ class: enabled_icon_class_for(discussion, current_user) }
         - discussion_activity = discussion_activity_count_for(discussion, current_user)
@@ -24,7 +25,7 @@
       - motion_activity = motion_activity_count_for(discussion.current_motion, current_user)
       - popover_title = render 'discussions/graph_preview_pop_over_title', :motion => discussion.current_motion
       - popover_content = render 'discussions/graph_preview_pop_over', :motion => discussion.current_motion, :user => current_user, :motion_activity =>  motion_activity
-      .motion-popover-link{id: "popover_#{discussion.current_motion.id}", 'data-title' => popover_title, 'data-content' => popover_content}
+      .selector-pie-link{'data-title' => popover_title, 'data-content' => popover_content}
         .pie{:id => "graph_#{discussion.current_motion.id}"}
           - if discussion.current_motion.voting? && motion_activity > 0
             %span.activity-count.label.label-info
@@ -35,24 +36,32 @@
       .large-icon.pie-icon.activity-icon
 
 - if discussion.current_motion
-  :coffeescript
-    $ ->
-      # Display vote graph
-      make_the_graph = ->
-        @pie_graph_view = new Loomio.Views.Utils.GraphView
-          el: '.pie'
-          id_string: "graph_#{discussion.current_motion.id}"
-          legend: false
-          data: #{discussion.current_motion.votes_for_graph.to_json.html_safe}
-          type: 'pie'
-          tooltip_selector: '#tooltip'
-          diameter: 25
-          padding: 1
-          gap: 1
+  :javascript
+    //Display vote graph
+    $(function() {
+      var make_the_graph;
+      console.log("here");
+      make_the_graph = function() {
+        console.log("in here");
+        return this.pie_graph_view = new Loomio.Views.Utils.GraphView({
+          el: '.pie',
+          id_string: "graph_#{discussion.current_motion.id}",
+          legend: false,
+          data: #{discussion.current_motion.votes_graph_ready.to_json.html_safe},
+          type: 'pie',
+          tooltip_selector: '#tooltip',
+          diameter: 25,
+          padding: 1,
+          gap: 1,
           shadow: 0.75
+        });
+      };
+
+      // IE8 FIX - for some reason we have to load the graph after everything else.
+      // Otherwise, the graph doesn't display in IE8.
+      // 
+      // Ideally, we'd like to be able to delete this line:
+      //return $(window).load(make_the_graph);
+      make_the_graph();
+    });
 
-      # IE8 FIX - for some reason we have to load the graph after everything else.
-      # Otherwise, the graph doesn't display in IE8.
-      #
-      # Ideally, we'd like to be able to delete this line:
-      $(window).load(make_the_graph)
diff --git a/app/views/discussions/_options.html.haml b/app/views/discussions/_options.html.haml
deleted file mode 100644
index ec9b310..0000000
--- a/app/views/discussions/_options.html.haml
+++ /dev/null
@@ -1,20 +0,0 @@
-.dropdown#discussion-options
-  = link_to image_tag("dropdown.png"), "#", id: "options-dropdown", class: "dropdown-toggle", 'data-toggle' => 'dropdown'
-  %ul.dropdown-menu.pull-right
-    - if can?(:edit_title, discussion)
-      %li= link_to "Edit discussion title", "#", :id => "edit-title"
-    - unless @destination_groups.blank?
-      %li= link_to "Move discussion", '#move-discussion-modal', "data-toggle" => "modal", id: 'move-discussion'
-    -if can? :destroy, discussion
-      %li= link_to "Delete discussion", "#", 'data-method-type' => 'delete', 'data-title' => "Delete Discussion", 'data-body' => "Are you sure you want to permanently delete this discussion?", 'data-confirm-path' => discussion_path(discussion), class: 'confirm-dialog', id: 'delete-discussion'
-
-#move-discussion-modal.modal.hidden
-  .modal-header
-    %button.close{"data-dismiss" => "modal"}×
-    %h3= "Where would you like to move this discussion to?"
-  = simple_form_for discussion, url: move_discussion_path(discussion), method: :put do |f|
-    .modal-body
-      = f.input :group_id, collection: @destination_groups, include_blank: false, label: false, id: "destination_groups"
-    .modal-footer
-      = f.button :submit, "Move discussion", class: "btn btn-danger", id: 'move-discussion-submit', :data => { :disable_with => "Move discussion" }
-      = link_to "Cancel", "#", "data-dismiss" => "modal", class: "btn"
diff --git a/app/views/discussions/_search_filter.html.haml b/app/views/discussions/_search_filter.html.haml
new file mode 100644
index 0000000..9c72fca
--- /dev/null
+++ b/app/views/discussions/_search_filter.html.haml
@@ -0,0 +1,2 @@
+.discussions-search-form
+  = text_field_tag 'search', nil, :placeholder => "Search discussions...", :id => "discussions-search-filter-input"
\ No newline at end of file
diff --git a/app/views/discussions/_title.html.haml b/app/views/discussions/_title.html.haml
index 2cfbccd..7ea8f8f 100644
--- a/app/views/discussions/_title.html.haml
+++ b/app/views/discussions/_title.html.haml
@@ -13,5 +13,11 @@
         .save-buttons.clearfix
           = submit_tag "Save", class: 'btn btn-small run-validations', id: 'edit-title-submit', :data => {:disable_with => "Saving"}
           = link_to "Cancel", "#", id: 'cancel-edit-title'
-  - if can?(:edit_title, discussion) || can?(:move, discussion) || can?(:destroy, discussion)
-    =render "discussions/options", discussion: discussion
+  - if can?(:edit_title, discussion) || can?(:destroy, discussion)
+    .dropdown
+      = link_to image_tag("dropdown.png"), "#", id: "options-dropdown", class: "dropdown-toggle", 'data-toggle' => 'dropdown'
+      %ul.dropdown-menu.pull-right
+        - if can?(:edit_title, discussion)
+          %li= link_to "Edit discussion title", "#", :id => "edit-title"
+        -if can? :destroy, discussion
+          %li= link_to "Delete discussion", "#", 'data-method-type' => 'delete', 'data-title' => "Delete Discussion", 'data-body' => "Are you sure you want to permanently delete this discussion?", 'data-confirm-path' => discussion_path(discussion), class: 'confirm-dialog', id: 'delete-discussion'
\ No newline at end of file
diff --git a/app/views/discussions/index.html.haml b/app/views/discussions/index.html.haml
index 14e7668..3e2943c 100644
--- a/app/views/discussions/index.html.haml
+++ b/app/views/discussions/index.html.haml
@@ -3,9 +3,11 @@
     - if @discussions.exists?
       - @discussions.each do |discussion|
         %li.selector-item= render '/discussions/discussion_preview', discussion: discussion, this_group: @group
+    - elsif @no_discussions_found
+      %li.empty-list-message No discussions were found in the search.
     - elsif @no_discussions_exist
       %li.empty-list-message This group does not have any discussions yet.
   #discussions-loading
     %li.selector-item.loading Loading...
 = paginate @discussions, :window => 3, :remote => :true
-- ViewLogger.group_viewed(@group, current_user) if current_user && params[:group_id]
+- current_user.update_group_last_viewed_at(@group) if current_user && params[:group_id]
diff --git a/app/views/discussions/show.html.haml b/app/views/discussions/show.html.haml
index 3fdd4c9..e4ab541 100644
--- a/app/views/discussions/show.html.haml
+++ b/app/views/discussions/show.html.haml
@@ -20,29 +20,32 @@
             %h3.header-text= t :current_decision
             .content-proposal-body
               %ul.selector-list
-                - if @current_motion.nil?
-                  - if can? :create, Motion.new(discussion_id: @discussion.id)
-                    = link_to t("create_new_proposal"), new_proposal_discussion_path(@discussion.id), class: 'btn new-proposal-btn', id: 'new-proposal'
-                  %li.selector-item.empty-list-message= t :empty_decision_list
-                - else
-                  - if @displayed_motion == @current_motion
-                    - if can? :close_voting, @current_motion
-                      %li= render '/motions/admin_buttons', :motion => @current_motion
+                - if @current_motion
+                  - if (not @selected_motion) && (can? :close_voting, @current_motion)
+                    %li= render '/motions/admin_buttons', :motion => @current_motion
+                  - if @selected_motion && (@selected_motion != @current_motion)
                     %li.selector-item.current-proposal
-                      = render @current_motion, unique_votes: @current_motion.unique_votes
+                      = render '/motions/motion_preview', motion: @current_motion, this_group: @group
                   - else
                     %li.selector-item.current-proposal
-                      = render '/motions/motion_preview', motion: @current_motion, this_group: @group
-                  = render '/motions/edit_close_date', motion: @current_motion, input_time: @input_time
-            - if @discussion.closed_motions.count > 0
+                      = render @current_motion, unique_votes: @unique_votes
+                - else
+                  - if can? :create, Motion.new(discussion_id: @discussion.id)
+                    = link_to t("create_new_proposal"), new_proposal_discussion_path(@discussion.id), class: 'btn btn-small new-proposal-btn', id: 'new-proposal'
+                  %li.selector-item.empty-list-message= t :empty_decision_list
+
+            - if @discussion.motions.where("phase = 'closed'").count > 0
               #previous-proposals
                 .clearfix
                   .large-icon.decision-icon
                   %h3.header-text= t "previous_decisions"
+
                 .content-proposal-body
                   %ul.selector-list
                     - @discussion.closed_motions.each do |closed_motion|
-                      - if closed_motion == @displayed_motion
-                        %li.selector-item= render closed_motion, unique_votes: closed_motion.unique_votes, this_group: @group
+                      - if closed_motion == @selected_motion
+                        %li.selector-item= render @selected_motion, unique_votes: @unique_votes, this_group: @group
                       - else
-                        %li.selector-item= render '/motions/motion_preview', motion: closed_motion, this_group: @group
\ No newline at end of file
+                        %li.selector-item= render '/motions/motion_preview', motion: closed_motion, this_group: @group
+- if @current_motion
+  = render '/motions/edit_close_date', :motion => @current_motion, :input_time => @input_time
\ No newline at end of file
diff --git a/app/views/email_preferences/edit.html.haml b/app/views/email_preferences/edit.html.haml
deleted file mode 100644
index 323c7fd..0000000
--- a/app/views/email_preferences/edit.html.haml
+++ /dev/null
@@ -1,21 +0,0 @@
-.row
-  .span12
-    %h1 Email Preferences
-    =simple_form_for(@email_preferences, :url => update_email_preferences_path, :method => :put) do |f|
-      %h2 Daily Activity Summary
-      -if params[:unsubscribe_token]
-        =hidden_field_tag :unsubscribe_token, params[:unsubscribe_token]
-      =f.input :subscribed_to_daily_activity_email, :as => :boolean, :inline_label => 'Send me a daily activity email summarising what’s been happening in my groups', :label => false
-
-      -#=f.input :subscribed_to_mention_notifications, label: 'When someone mentions your name'
-      %h2 Global Notifications
-      =f.input :subscribed_to_proposal_closure_notifications, :as => :boolean, :inline_label => 'Remind me 24 hours before a proposal closes', :label => false
-      =f.input :subscribed_to_mention_notifications, :as => :boolean, :inline_label => 'Email me when someone mentions me in a comment', :label => false
-
-      %h2 Group Activity Notifications
-      %p For each group, check the box if you want to be emailed immediately about new discussions and decisions.
-
-      .control-group
-        =f.collection_check_boxes(:group_email_preferences, @email_preferences.all_memberships, :id, :group_full_name, {}, {:class => 'checkbox'}){ |input| input.label(:class => 'checkbox') { input.check_box + input.text } }
-
-      =f.submit 'Update preferences', :class => "btn btn-info btn-large"
diff --git a/app/views/groups/_add_members.html.haml b/app/views/groups/_add_members.html.haml
index 465d581..41198e2 100644
--- a/app/views/groups/_add_members.html.haml
+++ b/app/views/groups/_add_members.html.haml
@@ -12,7 +12,7 @@
           .modal-header
             %button.close{"data-dismiss" => "modal"}×
             %h2= "Invite members to #{group.name}"
-          = semantic_form_for(User.new, url: user_invitation_path, html: { method: :post, autocomplete: "off" }) do |f|
+          = semantic_form_for(User.new, url: user_invitation_path, html: { method: :post }) do |f|
             .modal-body
               - if no_member_limit || invites_left > 0
                 = devise_error_messages!
@@ -31,7 +31,7 @@
                     = "and we'll see what we can do."
               %input#group_id{ type: "hidden", value: group.id }
             .modal-footer
-              = link_to "Cancel", "#", "data-dismiss" => "modal", class: "btn btn-grey"
+              = link_to "Cancel", "#", "data-dismiss" => "modal", class: "btn btn-small btn-grey"
               - if no_member_limit || invites_left > 0
                 = f.submit "Send invite", class: "btn btn-info", id: "user-submit", :data => { :disable_with => "Sending" }
       - else
diff --git a/app/views/groups/_request_membership.html.haml b/app/views/groups/_request_membership.html.haml
index d1a7c12..4fc56f4 100644
--- a/app/views/groups/_request_membership.html.haml
+++ b/app/views/groups/_request_membership.html.haml
@@ -5,9 +5,9 @@
       - if membership_request.present?
         = link_to "Membership Requested", membership_request, method: :delete,
           confirm: "Are you sure you wish to withdraw your membership request from this group?",
-          class: "btn", id: "membership-requested"
+          class: "btn btn-small", id: "membership-requested"
       - else
         - if group.parent.nil? || current_user.group_membership(group.parent)
           =form_for(Membership.new) do |f|
             %input{name: "membership[group_id]", type: :hidden, value: group.id}
-              =submit_tag "Request membership", class: "btn"
+              =submit_tag "Request membership", class: "btn btn-small"
diff --git a/app/views/groups/_subgroup_add_members.html.haml b/app/views/groups/_subgroup_add_members.html.haml
index ddf7404..75016b5 100644
--- a/app/views/groups/_subgroup_add_members.html.haml
+++ b/app/views/groups/_subgroup_add_members.html.haml
@@ -14,4 +14,4 @@
     - else
       = "No parent group members exist to add. Please add the members to the parent group first."
   .modal-footer
-    = submit_tag "Invite members", class: "btn btn-info", disable_with: "Invite members"
+    = submit_tag "Invite members", class: "btn btn-small btn-info", disable_with: "Invite members"
diff --git a/app/views/groups/_subgroups.html.haml b/app/views/groups/_subgroups.html.haml
index e907128..6187c71 100644
--- a/app/views/groups/_subgroups.html.haml
+++ b/app/views/groups/_subgroups.html.haml
@@ -8,3 +8,5 @@
         %li
           .group-link
             = link_to subgroup.name, group_path(subgroup), :class => 'view_'+subgroup.viewable_by.to_s
+            - if user_signed_in?
+              = render '/application/group_activity', user: current_user, group: subgroup
diff --git a/app/views/groups/_title.html.haml b/app/views/groups/_title.html.haml
index a015133..8e1308a 100644
--- a/app/views/groups/_title.html.haml
+++ b/app/views/groups/_title.html.haml
@@ -1,5 +1,5 @@
 .page-container
-  .group-title.clearfix#group-title
+  .group-title.clearfix
     - if group
       %h1.home-title
         = link_to "Home", "/"
diff --git a/app/views/groups/show.html.haml b/app/views/groups/show.html.haml
index ce9f6eb..8684ae4 100644
--- a/app/views/groups/show.html.haml
+++ b/app/views/groups/show.html.haml
@@ -3,6 +3,7 @@
 .clearfix
   - if can? :create, @discussion
     = icon_button(new_discussion_path(:group_id => @group.id), 'Start a discussion', '/assets/topic-18.png', 'start-new-discussion')
+  = render 'discussions/search_filter'
 .row.main-content
   %section.span8
     %ul.selector-list.bordered
@@ -14,7 +15,7 @@
         - @discussions.with_current_motions_user_has_voted_on.each do |discussion|
           %li.selector-item= render '/discussions/discussion_preview', discussion: discussion, this_group: @group
         .discussion-with-motion-divider.hidden
-      #group-discussions.hidden
+      #group-discussions.hidden{:data => {:group => @group.id}}
         %div{ class: "group_#{@group.id}" }
 
   %section.span4
diff --git a/app/views/motions/_motion.html.haml b/app/views/motions/_motion.html.haml
index 337000b..ec4f493 100644
--- a/app/views/motions/_motion.html.haml
+++ b/app/views/motions/_motion.html.haml
@@ -16,8 +16,9 @@
       .proposed-by
         = "Proposed #{time_ago_in_words(motion.created_at)} ago by #{motion.author_name}"
     .span2.motion-admin-buttons
-      = render '/motions/admin_buttons', motion: motion unless motion.closed?
-    =render "motions/outcome_statement", motion: motion, this_group: this_group if motion.closed?
+      = render '/motions/admin_buttons', motion: @current_motion unless @selected_motion || motion.closed?
+  - if motion.closed?
+    =render "motions/outcome_statement", motion: motion, this_group: this_group
 
   .description
 
@@ -41,7 +42,7 @@
     = "have " unless motion.closed?
     = "stated their position (#{motion.group_count - motion.no_vote_count}/#{motion.group_count})"
   .votes
-    - if display_vote_buttons?(motion, current_user)
+    - if motion.voting? && @group.users_include?(current_user) && (not @user_already_voted)
       %h3 State your position
       .vote-buttons.clearfix
         =link_to image_tag("hand-yes.png", title:"I agree", alt:"I agree"), new_motion_vote_path(motion_id: motion.id, position: 'yes'), "title" => "I agree", "data-content" => "I agree with this and want it to go ahead.", class: "position btn vote-yes", id: "yes-vote"
@@ -59,7 +60,7 @@
           el: '.pie'
           id_string: "graph_#{motion.id}"
           legend: true
-          data: #{motion.votes_for_graph.to_json}
+          data: #{@votes_for_graph.to_json}
           type: 'pie'
           tooltip_selector: '#tooltip'
           diameter: 200
diff --git a/app/views/motions/_motion_preview.html.haml b/app/views/motions/_motion_preview.html.haml
index b7d352d..c267d86 100644
--- a/app/views/motions/_motion_preview.html.haml
+++ b/app/views/motions/_motion_preview.html.haml
@@ -21,7 +21,7 @@
               = "no close date"
             =" · " unless this_group
           .proposal-group-name= DiscussionDecorator.new(motion.discussion).display_group_name(this_group)
-      .pie{id: "graph_#{motion.id}", 'data-votes' => motion.votes_for_graph.to_json}
+      .pie{id: "graph_#{motion.id}", 'data-votes' => motion.votes_graph_ready.to_json}
 
 - if params[:controller] == 'discussions'
   :coffeescript
@@ -32,14 +32,14 @@
           el: '.pie'
           id_string: "graph_#{motion.id}"
           legend: false
-          data: #{motion.votes_for_graph.to_json}
+          data: #{motion.votes_graph_ready.to_json}
           type: 'pie'
           tooltip_selector: '#tooltip'
           diameter: 25
           padding: 1
           gap: 1
           shadow: 0.75
-
+          
       # IE8 FIX - for some reason we have to load the graph after everything else.
       # Otherwise, the graph doesn't display in IE8.
       #
diff --git a/app/views/motions/get_and_clear_new_activity.js.erb b/app/views/motions/get_and_clear_new_activity.js.erb
index 61338b3..f7c4788 100644
--- a/app/views/motions/get_and_clear_new_activity.js.erb
+++ b/app/views/motions/get_and_clear_new_activity.js.erb
@@ -1,14 +1,13 @@
-var popoverLink = $('<%= escape_javascript("#popover_#{@motion.id}")%>');
-popoverLink.popover('hide');
-popoverLink.removeData('popover');
-popoverLink.popover ({
+var graph = $('<%= escape_javascript("#graph_#{@motion.id}")%>').parent();
+graph.popover('hide');
+graph.removeData('popover');
+graph.popover ({
   placement: "right",
-  html: true,
   trigger: "manual",
-  title: "<%= escape_javascript render 'discussions/graph_preview_pop_over_title', motion: @motion %>",
-  content: "<%= escape_javascript render 'discussions/graph_preview_pop_over', motion: @motion, user: @user, motion_activity: @motion_activity%>"
+  title: "<%= escape_javascript render 'discussions/graph_preview_pop_over_title', :motion => @motion %>",
+  content: "<%= escape_javascript render 'discussions/graph_preview_pop_over', :motion => @motion, :user => @user, :motion_activity =>  @motion_activity%>"
 });
-popoverLink.popover('toggle');
+graph.popover('toggle');
 if (<%= not @user.nil? %>) {
-  popoverLink.find('.activity-count').remove()
+  graph.find('.activity-count').hide();
 }
\ No newline at end of file
diff --git a/app/views/user_mailer/motion_closing_soon.html.haml b/app/views/user_mailer/motion_closing_soon.html.haml
index 7b43ad2..60ce95e 100644
--- a/app/views/user_mailer/motion_closing_soon.html.haml
+++ b/app/views/user_mailer/motion_closing_soon.html.haml
@@ -24,7 +24,7 @@
   -#-else
     -#Please state your position
   -#%br
-  -@motion.votes_for_graph.each do |results|
+  -@motion.votes_graph_ready.each do |results|
     =results[0]
   %br
   #{@motion.percent_voted}% of members have stated their position (#{@motion.group_count - @motion.no_vote_count}/#{@motion.group_count})
diff --git a/app/views/users/email_preferences.html.haml b/app/views/users/email_preferences.html.haml
new file mode 100644
index 0000000..de35797
--- /dev/null
+++ b/app/views/users/email_preferences.html.haml
@@ -0,0 +1,21 @@
+.row
+  .span12
+    %h1 Email Preferences
+    =simple_form_for(@user) do |f|
+      %h2 Daily Activity Summary
+      -if params[:unsubscribe_token]
+        =hidden_field_tag :unsubscribe_token, params[:unsubscribe_token]
+      =f.input :subscribed_to_daily_activity_email, :inline_label => 'Send me a daily activity email summarising what’s been happening in my groups', :label => false
+
+      -#=f.input :subscribed_to_mention_notifications, label: 'When someone mentions your name'
+      %h2 Global Notifications
+      =f.input :subscribed_to_proposal_closure_notifications, :inline_label => 'Remind me 24 hours before a proposal closes', :label => false
+      =f.input :subscribed_to_mention_notifications, :inline_label => 'Email me when someone mentions me in a comment', :label => false
+
+      %h2 Group Activity Notifications
+      %p For each group, check the box if you want to be emailed immediately about new discussions and decisions.
+
+      .control-group
+        =f.collection_check_boxes :group_email_preferences, @user.memberships.select{|m| m.group }.sort{|a,b| a.group_full_name <=> b.group_full_name}, :id, :group_full_name, {}, {:class => 'checkbox'}{ |input| input.label(:class => 'checkbox') { input.check_box + input.text } }
+
+      =f.submit 'Update preferences', :class => "btn btn-info btn-large"
diff --git a/config/routes.rb b/config/routes.rb
index 5571049..c31fbe7 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -38,7 +38,7 @@ Loomio::Application.routes.draw do
     post :show_description_history, :on => :member
     get :new_proposal, :on => :member
     post :edit_title, :on => :member
-    put :move, :on => :member
+    get :search, :on => :collection
   end
   post "/discussion/:id/preview_version/(:version_id)", :to => "discussions#preview_version", :as => "preview_version_discussion"
   post "/discussion/update_version/:version_id", :to => "discussions#update_version", :as => "update_version_discussion"
@@ -76,8 +76,7 @@ Loomio::Application.routes.draw do
     post :unlike, on: :member
   end
   match "/settings", :to => "users#settings", :as => :user_settings
-  match 'email_preferences', :to => "email_preferences#edit", :as => :email_preferences, :via => :get
-  match 'email_preferences', :to => "email_preferences#update", :as => :update_email_preferences, :via => :put
+  match 'email_preferences', :to => "users#email_preferences", :as => :email_preferences
 
   # route logged in user to dashboard
   resources :dashboard, only: :show
@@ -86,9 +85,6 @@ Loomio::Application.routes.draw do
     root :to => 'dashboard#show'
   end
 
-  #redirect old invites
-  match "/groups/:id/invitations/:token" => "group_requests#start_new_group"
-
   match '/browser_not_supported' => 'high_voltage/pages#show', :id => 'browser_not_supported'
   match '/privacy' => 'high_voltage/pages#show', :id => 'privacy'
   match '/blog' => 'high_voltage/pages#show', :id => 'blog'
diff --git a/db/migrate/20130402220904_add_missing_usernames.rb b/db/migrate/20130402220904_add_missing_usernames.rb
deleted file mode 100644
index afaf0b7..0000000
--- a/db/migrate/20130402220904_add_missing_usernames.rb
+++ /dev/null
@@ -1,38 +0,0 @@
-class AddMissingUsernames < ActiveRecord::Migration
-  class User < ActiveRecord::Base
-    def generate_username
-      ensure_name_entry if name.nil?
-      if name.include? '@'
-        #email used in place of name
-        email_str = email.split("@").first
-        new_username = email_str.gsub(/[^a-zA-Z0-9]/, "").downcase
-      else
-        new_username = name.gsub(/[^a-zA-Z0-9]/, "").downcase
-      end
-      username_tmp = new_username.dup
-      num = 1
-      while(User.where("username = ?", username_tmp).count > 0)
-        username_tmp = "#{new_username}#{num}"
-        num+=1
-      end
-      self.username = username_tmp
-      save
-    end
-
-    def ensure_name_entry
-      unless name
-        self.name = email
-        save
-      end
-    end
-  end
-
-  def up
-    User.where("username IS NULL").each do |user|
-      user.generate_username
-    end
-  end
-
-  def down
-  end
-end
diff --git a/db/schema.rb b/db/schema.rb
index 7bdcc40..e176b6f 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -11,7 +11,7 @@
 #
 # It's strongly recommended to check this file into your version control system.
 
-ActiveRecord::Schema.define(:version => 20130402220904) do
+ActiveRecord::Schema.define(:version => 20130318033458) do
 
   create_table "active_admin_comments", :force => true do |t|
     t.string   "resource_id",   :null => false
@@ -223,19 +223,19 @@ ActiveRecord::Schema.define(:version => 20130402220904) do
   add_index "notifications", ["user_id"], :name => "index_notifications_on_user_id"
 
   create_table "users", :force => true do |t|
-    t.string   "email",                                                       :default => "",         :null => false
-    t.string   "encrypted_password",                           :limit => 128, :default => ""
+    t.string   "email",                                                      :default => "",         :null => false
+    t.string   "encrypted_password",                                         :default => ""
     t.string   "reset_password_token"
     t.datetime "reset_password_sent_at"
     t.datetime "remember_created_at"
-    t.integer  "sign_in_count",                                               :default => 0
+    t.integer  "sign_in_count",                                              :default => 0
     t.datetime "current_sign_in_at"
     t.datetime "last_sign_in_at"
     t.string   "current_sign_in_ip"
     t.string   "last_sign_in_ip"
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.boolean  "admin",                                                       :default => false
+    t.boolean  "admin",                                                      :default => false
     t.string   "name"
     t.string   "unconfirmed_email"
     t.string   "invitation_token",                             :limit => 60
@@ -245,25 +245,25 @@ ActiveRecord::Schema.define(:version => 20130402220904) do
     t.integer  "invited_by_id"
     t.string   "invited_by_type"
     t.datetime "deleted_at"
-    t.boolean  "has_read_system_notice",                                      :default => false,      :null => false
-    t.boolean  "is_admin",                                                    :default => false
-    t.string   "avatar_kind",                                                 :default => "initials", :null => false
+    t.boolean  "has_read_system_notice",                                     :default => false,      :null => false
+    t.boolean  "is_admin",                                                   :default => false
+    t.string   "avatar_kind",                                                :default => "initials", :null => false
     t.string   "uploaded_avatar_file_name"
     t.string   "uploaded_avatar_content_type"
     t.integer  "uploaded_avatar_file_size"
     t.datetime "uploaded_avatar_updated_at"
     t.string   "avatar_initials"
-    t.boolean  "has_read_dashboard_notice",                                   :default => false,      :null => false
-    t.boolean  "has_read_group_notice",                                       :default => false,      :null => false
-    t.boolean  "has_read_discussion_notice",                                  :default => false,      :null => false
+    t.boolean  "has_read_dashboard_notice",                                  :default => false,      :null => false
+    t.boolean  "has_read_group_notice",                                      :default => false,      :null => false
+    t.boolean  "has_read_discussion_notice",                                 :default => false,      :null => false
     t.string   "username"
-    t.boolean  "subscribed_to_daily_activity_email",                          :default => true,       :null => false
-    t.boolean  "subscribed_to_mention_notifications",                         :default => true,       :null => false
-    t.boolean  "subscribed_to_proposal_closure_notifications",                :default => true,       :null => false
+    t.boolean  "subscribed_to_daily_activity_email",                         :default => true,       :null => false
+    t.boolean  "subscribed_to_mention_notifications",                        :default => true,       :null => false
+    t.boolean  "subscribed_to_proposal_closure_notifications",               :default => true,       :null => false
     t.string   "authentication_token"
     t.string   "unsubscribe_token"
-    t.integer  "memberships_count",                                           :default => 0,          :null => false
-    t.boolean  "uses_markdown",                                               :default => false
+    t.integer  "memberships_count",                                          :default => 0,          :null => false
+    t.boolean  "uses_markdown",                                              :default => false
   end
 
   add_index "users", ["email"], :name => "index_users_on_email", :unique => true
diff --git a/db/seeds.rb b/db/seeds.rb
index 86b50f0..80abdde 100644
--- a/db/seeds.rb
+++ b/db/seeds.rb
@@ -25,4 +25,4 @@ def create_woc_options
 end
 
 create_helper_bot
-create_woc_options
+create_woc_options
\ No newline at end of file
diff --git a/extras/discussion_mover.rb b/extras/discussion_mover.rb
deleted file mode 100644
index 115b9cd..0000000
--- a/extras/discussion_mover.rb
+++ /dev/null
@@ -1,25 +0,0 @@
-class DiscussionMover
-
-  def self.destination_groups(group, user)
-    destinations = []
-    destinations << [group.parent.name, group.parent.id] if group.is_a_subgroup? && user.is_group_admin?(group.parent)
-    destinations += subgroup_destinations(group, user)
-    destinations
-  end
-
-  def self.subgroup_destinations(group, user)
-    subgroup_destinations = []
-    parent = group.parent || group
-    parent.subgroups.each do |subgroup|
-      if user.is_group_admin?(subgroup) && subgroup != group
-        subgroup_destinations << [subgroup.name, subgroup.id]
-      end
-    end
-    subgroup_destinations
-  end
-
-  def self.can_move?(user, destination)
-    return true if user.is_group_admin?(destination)
-    false
-  end
-end
diff --git a/extras/email_preferences.rb b/extras/email_preferences.rb
deleted file mode 100644
index 1930a15..0000000
--- a/extras/email_preferences.rb
+++ /dev/null
@@ -1,54 +0,0 @@
-
-class EmailPreferences
-  attr_reader :user
-
-  delegate :to_key,
-           :to_param,
-           :subscribed_to_daily_activity_email,
-           :subscribed_to_proposal_closure_notifications,
-           :subscribed_to_mention_notifications, :to => :user
-
-  def initialize(user)
-    @user = user
-  end
-
-  def update_attributes(attributes)
-    self.group_email_preferences = attributes.delete('group_email_preferences')
-    @user.update_attributes(attributes)
-  end
-
-  def all_memberships
-    memberships.includes(:group).order("groups.name")
-  end
-
-  def self.model_name
-    ActiveModel::Name.new(self)
-  end
-
-  def group_email_preferences
-    memberships.
-      where(:subscribed_to_notification_emails => true).
-      map(&:id)
-  end
-
-  def group_email_preferences=(membership_id_strings)
-    if membership_id_strings
-      self.subscribed_membership_ids = membership_id_strings.reject(&:blank?).map(&:to_i)
-    end
-  end
-
-  private
-
-    def subscribed_membership_ids=(membership_ids)
-      update_subscriptions memberships, false
-      update_subscriptions memberships.where(id: membership_ids), true
-    end
-
-    def update_subscriptions(scope, value)
-      scope.update_all(subscribed_to_notification_emails: value)
-    end
-
-    def memberships
-      @user.memberships
-    end
-end
diff --git a/extras/queries/visible_discussions.rb b/extras/queries/visible_discussions.rb
index 02bf3f7..64ec128 100644
--- a/extras/queries/visible_discussions.rb
+++ b/extras/queries/visible_discussions.rb
@@ -63,4 +63,8 @@ class Queries::VisibleDiscussions < SimpleDelegator
   def without_current_motions
     includes(:motions).where("discussions.id NOT IN (SELECT discussion_id FROM motions WHERE phase = 'voting')")
   end
+
+  def where_title_is_like(title_query)
+    where("discussions.title ILIKE ?", "%#{title_query}%")
+  end
 end
\ No newline at end of file
diff --git a/extras/view_logger.rb b/extras/view_logger.rb
deleted file mode 100644
index 8e02148..0000000
--- a/extras/view_logger.rb
+++ /dev/null
@@ -1,36 +0,0 @@
-class ViewLogger
-
-  def self.motion_viewed(motion, user)
-    log = MotionReadLog.where('motion_id = ? AND user_id = ?', motion.id, user.id).first
-    if log.nil?
-      log = MotionReadLog.new
-      log.update_attributes(user_id: user.id, motion_id: motion.id)
-    else
-      log.update_attributes(motion_last_viewed_at: Time.now)
-    end
-  end
-
-  def self.discussion_viewed(discussion, user)
-    log = DiscussionReadLog.where('discussion_id = ? AND user_id = ?', discussion.id, user.id).first
-    if log.nil?
-      log = DiscussionReadLog.new
-      log.update_attributes(user_id: user.id, discussion_id: discussion.id)
-    else
-      log.update_attributes(discussion_last_viewed_at: Time.now)
-    end
-    discussion.update_total_views
-  end
-
-  def self.group_viewed(group, user)
-    membership = user.group_membership(group)
-    if membership
-      membership.group_last_viewed_at = Time.now
-      membership.save!
-    end
-  end
-
-  def self.delete_all_logs_for(user_id)
-    MotionReadLog.destroy_all(user_id: user_id)
-    DiscussionReadLog.destroy_all(user_id: user_id)
-  end
-end
\ No newline at end of file
diff --git a/features/discussions/admin_moves_discussion.feature b/features/discussions/admin_moves_discussion.feature
deleted file mode 100644
index c8dac34..0000000
--- a/features/discussions/admin_moves_discussion.feature
+++ /dev/null
@@ -1,54 +0,0 @@
-Feature: Admin moves discussion
-  As an admin
-  So that I can keep my group organised
-  I want to move discussions between subgroups
-
-  Scenario: Admin moves a discussion from parent group to subgroup
-    Given I am logged in
-    And I am an admin of a group with a discussion
-    And the group has a subgroup
-    And I am an admin of the subgroup 
-    When I visit the discussion page
-    And I select the move discussion link from the discussion dropdown
-    And I select the destination subgroup
-    And I click on move
-    Then I should see the destination subgroup name in the page title
-
-  Scenario: Admin moves a discussion from subgroup to its parent group
-    Given I am logged in
-    And I am an admin of a group
-    And the group has a subgroup
-    And I am an admin of the subgroup
-    And the subgroup has a discussion
-    When I visit the discussion page
-    And I select the move discussion link from the discussion dropdown
-    And I select the destination parent group
-    And I click on move
-    Then I should not see the subgroup name in the page title
-
-  Scenario: Admin moves a discussion between subgroups within the same parent group
-    Given I am logged in
-    And I am an admin of a group
-    And the group has a subgroup
-    And I am an admin of the subgroup
-    And the group has another subgroup with a discussion I am an admin of
-    When I visit the discussion page
-    And I select the move discussion link from the discussion dropdown
-    And I select the destination subgroup
-    And I click on move
-    Then I should see the destination subgroup name in the page title
-
-  Scenario: User tries to move a discussion
-    Given I am logged in
-    And I am a member of a group
-    And there is a discussion in the group
-    And the group has a subgroup
-    When I visit the discussion page
-    Then I try to move the discussion but I cannot see the link
-
-  Scenario: Admin tries to move a discussion from a group with no subgroups
-    Given I am logged in
-    And I am an admin of a group with a discussion
-    When I visit the discussion page
-    Then I try to move the discussion but I cannot see the link
-
diff --git a/features/groups/accept_invitation_to_start_group.feature b/features/groups/accept_invitation_to_start_group.feature
index 7cb6d7e..85ab40c 100644
--- a/features/groups/accept_invitation_to_start_group.feature
+++ b/features/groups/accept_invitation_to_start_group.feature
@@ -46,9 +46,3 @@ Feature: Group admin accepts invitation to start a Loomio group
     When I open the email sent to me
     And I click the invitation link to start a new group
     Then I should be notified the invitation has already been accepted
-
-  Scenario: User accepts an invitation containing the old style link
-    Given I have requested to start a loomio group
-    And the group request has been approved
-    When I click the old format invitation link to start a new group
-    Then I should be asked to create an account
diff --git a/features/search_discussions.feature b/features/search_discussions.feature
new file mode 100644
index 0000000..4f9ba21
--- /dev/null
+++ b/features/search_discussions.feature
@@ -0,0 +1,17 @@
+Feature: Search discussions 
+  In order to efficiently find an existing discussion or decision
+  A user must be able to filter the discussions list
+
+Background:
+  Given I am logged in
+  And I am a member of a group
+  And the group has discussions
+
+Scenario: User enters a search term to filter discussions
+  When I visit the group page
+  Given the group has multiple discussions
+  And the group has a discussion titled "What should we have for breakfast?"
+  When I enter "breakfast" in the discussions search input
+  Then I should only see discussions with "breakfast" in the title
+
+
diff --git a/features/step_definitions/accept_invitation_to_start_group_steps.rb b/features/step_definitions/accept_invitation_to_start_group_steps.rb
index 65405cc..461f8d4 100644
--- a/features/step_definitions/accept_invitation_to_start_group_steps.rb
+++ b/features/step_definitions/accept_invitation_to_start_group_steps.rb
@@ -42,14 +42,6 @@ When /^I choose to log in and then I submit the login form$/ do
   click_on "sign-in-btn"
 end
 
-When /^I click the old format invitation link to start a new group$/ do
-  visit("/groups/#{@group_request.group_id}/invitations/#{@group_request.token}")
-end
-
-Then /^I should be asked to create an account$/ do
-  page.should have_content("Your request to a start a new group on Loomio has been approved!")
-end
-
 Then /^I should become the admin of the group$/ do
   @user ||= User.find_by_email(@admin_email)
   @user.is_group_admin?(@group).should == true
diff --git a/features/step_definitions/admin_moves_discussion_steps.rb b/features/step_definitions/admin_moves_discussion_steps.rb
deleted file mode 100644
index 47cb4b6..0000000
--- a/features/step_definitions/admin_moves_discussion_steps.rb
+++ /dev/null
@@ -1,28 +0,0 @@
-When /^I select the move discussion link from the discussion dropdown$/ do
-  find("#options-dropdown").click
-  click_on "move-discussion"
-end
-
-When /^I select the destination subgroup$/ do
-  select @subgroup.name, from: 'discussion_group_id'
-end
-
-Then /^I should see the destination subgroup name in the page title$/ do
-  find('#group-title').should have_content @subgroup.name
-end
-
-When /^I select the destination parent group$/ do
-  select @group.name, from: 'discussion_group_id'
-end
-
-Then /^I should not see the subgroup name in the page title$/ do
-  find('#group-title').should_not have_content @subgroup.name
-end
-
-When /^I click on move$/ do
-  click_on 'Move discussion'
-end
-
-Then /^I try to move the discussion but I cannot see the link$/ do
-  find('#discussion-options').should_not have_content 'Move discussion'
-end
\ No newline at end of file
diff --git a/features/step_definitions/clear_vote_activity_steps.rb b/features/step_definitions/clear_vote_activity_steps.rb
index b52f761..5c50cdc 100644
--- a/features/step_definitions/clear_vote_activity_steps.rb
+++ b/features/step_definitions/clear_vote_activity_steps.rb
@@ -27,7 +27,7 @@ Then /^I should see a summary of the proposal's activity$/ do
 end
 
 Then /^the proposal activity count should clear for that discussion$/ do
-  find("#graph_#{@motion.id}").should_not have_css(".activity-count")
+  find("#graph_#{@motion.id}").should_not have_css(".activity-count.hidden")
 end
 
 Then /^I should not see any new activity for that discussion$/ do
diff --git a/features/step_definitions/group_steps.rb b/features/step_definitions/group_steps.rb
index ddd5069..aefd4db 100644
--- a/features/step_definitions/group_steps.rb
+++ b/features/step_definitions/group_steps.rb
@@ -44,11 +44,6 @@ Given /^I am a member of a group$/ do
   @group.add_member! @user
 end
 
-Given /^I am an admin of the subgroup$/ do
-  @subgroup = FactoryGirl.create :group, parent: @group
-  @subgroup.add_admin! @user
-end
-
 Given /^"(.*?)" is a member of the group$/ do |arg1|
   user = FactoryGirl.create :user, name: arg1,
                             email: "#{arg1}@example.org",
@@ -98,8 +93,15 @@ Given /^there is a discussion in a group I belong to$/ do
   @group.add_member! @user
 end
 
-Given /^the subgroup has a discussion$/ do
-  @discussion = FactoryGirl.create :discussion, :group => @subgroup
+Given /^the group has multiple discussions$/ do 
+  @group = FactoryGirl.create :group
+  3.times do |i| 
+    discussion = FactoryGirl.create :discussion, :group => @group, :title => "Test discussion #{i}"
+  end 
+end
+
+And /^the group has a discussion titled "(.*?)"$/ do |discussion_title|
+  @discussion = FactoryGirl.create :discussion, :group => @group, :title => discussion_title
 end
 
 When /^I fill details for the subgroup$/ do
@@ -156,18 +158,3 @@ end
 Then /^I should not see the list of invited users$/ do
   page.should_not have_css('#invited-users')
 end
-
-Given /^the group has a subgroup$/ do
-  @subgroup = FactoryGirl.create(:group, parent: @group)
-end
-
-Given /^the group has a subgroup I am an admin of$/ do
-  @subgroup = FactoryGirl.create(:group, parent: @group)
-  @subgroup.add_admin!(@user)
-end
-
-Then /^the group has another subgroup with a discussion I am an admin of$/ do
-  @subgroup1 = FactoryGirl.create(:group, parent: @group)
-  @subgroup1.add_admin!(@user)
-  @discussion = FactoryGirl.create :discussion, :group => @subgroup1
-end
diff --git a/features/step_definitions/search_discussions_steps.rb b/features/step_definitions/search_discussions_steps.rb
new file mode 100644
index 0000000..b05fcc8
--- /dev/null
+++ b/features/step_definitions/search_discussions_steps.rb
@@ -0,0 +1,9 @@
+When /^I enter "(.*?)" in the discussions search input$/ do |search_term|
+  fill_in "discussions-search-filter-input", :with => 'search_term'
+end
+
+Then /^I should only see discussions with "(.*?)" in the title$/ do |search_term|
+  page.all(".discussion-title").each do |title|
+    title.text =~ /#{search_term}/
+  end
+end
\ No newline at end of file
diff --git a/features/step_definitions/unsubscribe_token_steps.rb b/features/step_definitions/unsubscribe_token_steps.rb
index 2405b31..45234ae 100644
--- a/features/step_definitions/unsubscribe_token_steps.rb
+++ b/features/step_definitions/unsubscribe_token_steps.rb
@@ -14,7 +14,7 @@ When /^I visit email_preferences with unsubscribe_token in the params$/ do
 end
 
 Then /^I should be able to update my email preferences$/ do
-  uncheck 'email_preferences[subscribed_to_daily_activity_email]'
+  uncheck 'user[subscribed_to_daily_activity_email]'
   click_on 'Update preferences'
-  page.should have_content 'Your email settings have been updated.'
+  page.should have_content 'Your settings have been updated.'
 end
diff --git a/features/step_definitions/web_steps.rb b/features/step_definitions/web_steps.rb
index 30914e6..a9fb563 100644
--- a/features/step_definitions/web_steps.rb
+++ b/features/step_definitions/web_steps.rb
@@ -29,7 +29,3 @@ end
 Then /^debugger$/ do
   debugger
 end
-
-And /^show me the page$/ do
-  save_and_open_page
-end
diff --git a/features/support/vcr.rb b/features/support/vcr.rb
deleted file mode 100644
index 4395abd..0000000
--- a/features/support/vcr.rb
+++ /dev/null
@@ -1,6 +0,0 @@
-require 'vcr'
-VCR.configure do |c|
-  c.cassette_library_dir = 'spec/support/vcr_cassettes'
-  c.hook_into :webmock
-  c.ignore_localhost = true
-end
diff --git a/features/users/email_preferences_page.feature b/features/users/email_preferences_page.feature
index e434899..83a6823 100644
--- a/features/users/email_preferences_page.feature
+++ b/features/users/email_preferences_page.feature
@@ -11,40 +11,40 @@ Feature: Email preferences page
 
   Scenario: User enables daily email
     When I visit the email preferences page
-    And I check "email_preferences_subscribed_to_daily_activity_email"
+    And I check "user_subscribed_to_daily_activity_email"
     And I click "Update preferences"
     Then I should be subscribed to the daily actitivy email
 
   Scenario: User disables daily email
     Given I am subscribed to the daily activity email
     When I visit the email preferences page
-    And I uncheck "email_preferences_subscribed_to_daily_activity_email"
+    And I uncheck "user_subscribed_to_daily_activity_email"
     And I click "Update preferences"
     Then I should not be subscribed to the daily actitivy email
 
   Scenario: User enables 24 hour proposal close notification
     When I visit the email preferences page
-    And I check "email_preferences_subscribed_to_proposal_closure_notifications"
+    And I check "user_subscribed_to_proposal_closure_notifications"
     And I click "Update preferences"
     Then I should be subscribed to proposal closure notification emails
 
   Scenario: User disables 24 hour proposal close notification
     When I visit the email preferences page
-    And I uncheck "email_preferences_subscribed_to_proposal_closure_notifications"
+    And I uncheck "user_subscribed_to_proposal_closure_notifications"
     And I click "Update preferences"
     Then I should not be subscribed to proposal closure notification emails
 
   Scenario: User enables mention email notifications
     Given I am not subscribed to mention email notifications
     When I visit the email preferences page
-    And I check "email_preferences_subscribed_to_mention_notifications"
+    And I check "user_subscribed_to_mention_notifications"
     And I click "Update preferences"
     Then I should be subscribed to mention notifications
 
   Scenario: User disables mention email notifications
     Given I am subscribed to mention email notifications
     When I visit the email preferences page
-    And I uncheck "email_preferences_subscribed_to_mention_notifications"
+    And I uncheck "user_subscribed_to_mention_notifications"
     And I click "Update preferences"
     Then I should not be subscribed to mention notifications
 
diff --git a/lib/tasks/stats.rake b/lib/tasks/stats.rake
index 2009e4f..83ec71f 100644
--- a/lib/tasks/stats.rake
+++ b/lib/tasks/stats.rake
@@ -9,17 +9,17 @@ namespace :stats do
   task :groups => :environment do    # Export all groups, scramble details of private ones
     require 'csv'
     file = CSV.generate do |csv|
-      csv << ["id", "name", "created_at", "viewable_by", "parent_id", "description", "memberships_count", "archived_at", "distribution_metric", "sectors_metric", "other_sectors_metric", "cannot_contribute"]
+      csv << ["id", "name", "created_at", "viewable_by", "parent_id", "description", "memberships_count", "archived_at", "distribution_metric"]
       Group.all.each do |group|
         if group.viewable_by == :everyone
-          csv << [group.id, group.name, group.created_at, group.viewable_by, group.parent_id, group.description, group.memberships_count, group.archived_at, group.distribution_metric, group.sectors_metric, group.other_sectors_metric, group.cannot_contribute]
+          csv << [group.id, group.name, group.created_at, group.viewable_by, group.parent_id, group.description, group.memberships_count, group.archived_at, group.distribution_metric]
         else
-          csv << [scramble(group.id), "Private", group.created_at, group.viewable_by, group.parent_id, "Private", group.memberships_count, group.archived_at, group.distribution_metric, group.sectors_metric, group.other_sectors_metric, group.cannot_contribute]
+          csv << [scramble(group.id), "Private", group.created_at, group.viewable_by, group.parent_id, "Private", group.memberships_count, group.archived_at, group.distribution_metric]
         end
       end
     end
 
-    s3write('groups.csv', file)
+    s3file('groups.csv').write file
   end
 
   task :users => :environment do   # Export all users' create dates
@@ -31,7 +31,7 @@ namespace :stats do
       end
     end
 
-    s3write('users.csv', file)
+    s3file('users.csv').write file
   end
 
 task :events => :environment do    # Export all events, scramble users, scramble private groups & subgroups
@@ -98,7 +98,7 @@ task :events => :environment do    # Export all events, scramble users, scramble
       end
     end
 
-    s3write('events.csv', file)
+    s3file('events.csv').write file
   end
 
   def export_model_to_s3(model, fields)
@@ -110,15 +110,15 @@ task :events => :environment do    # Export all events, scramble users, scramble
       end
     end
 
-    s3write(model.name + '.csv', file)
+    s3file(model.name + '.csv').write file
   end
 
   def scramble(method)
     Digest::MD5.hexdigest(method.to_s)
   end
 
-  def s3write (filename, data)
+  def s3file (filename)
     raise "Please set environment variable CANONICAL_HOST" if ENV["CANONICAL_HOST"].blank?
-    AWS::S3.new.buckets['loomio-metrics'].objects.create(ENV["CANONICAL_HOST"] + '-' + filename, data)
+    AWS::S3.new.buckets['loomio-metrics'].objects.create ENV["CANONICAL_HOST"] + '-' + filename
   end
 end
\ No newline at end of file
diff --git a/public/404.html b/public/404.html
index 83e667c..8a8927a 100644
--- a/public/404.html
+++ b/public/404.html
@@ -56,19 +56,5 @@
       </a>
     </div>
   </div>
-<script type="text/javascript">
-
-  var _gaq = _gaq || [];
-  _gaq.push(['_setAccount', 'UA-31046122-1']);
-  _gaq.push(['_setDomainName', 'loomio.org']);
-  _gaq.push(['_trackPageview']);
-
-  (function() {
-    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
-    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
-    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
-  })();
-
-</script>
 </body>
 </html>
diff --git a/public/422.html b/public/422.html
index 0b800e3..866a115 100644
--- a/public/422.html
+++ b/public/422.html
@@ -56,19 +56,5 @@
       </a>
     </div>
   </div>
-  <script type="text/javascript">
-
-    var _gaq = _gaq || [];
-    _gaq.push(['_setAccount', 'UA-31046122-1']);
-    _gaq.push(['_setDomainName', 'loomio.org']);
-    _gaq.push(['_trackPageview']);
-
-    (function() {
-      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
-      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
-      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
-    })();
-
-  </script>
 </body>
 </html>
diff --git a/public/500.html b/public/500.html
index 61c4750..2a15d8d 100644
--- a/public/500.html
+++ b/public/500.html
@@ -56,19 +56,5 @@
       </a>
     </div>
   </div>
-  <script type="text/javascript">
-
-    var _gaq = _gaq || [];
-    _gaq.push(['_setAccount', 'UA-31046122-1']);
-    _gaq.push(['_setDomainName', 'loomio.org']);
-    _gaq.push(['_trackPageview']);
-
-    (function() {
-      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
-      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
-      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
-    })();
-
-  </script>
 </body>
 </html>
diff --git a/spec/controllers/discussions_controller_spec.rb b/spec/controllers/discussions_controller_spec.rb
index b621760..9b1fcc8 100644
--- a/spec/controllers/discussions_controller_spec.rb
+++ b/spec/controllers/discussions_controller_spec.rb
@@ -42,12 +42,11 @@ describe DiscussionsController do
 
       context do
         before do
-          motion.stub(:votes_for_graph).and_return([])
+          motion.stub(:votes_graph_ready).and_return([])
           motion.stub(:user_has_voted?).and_return(true)
           motion.stub(:open_close_motion)
           motion.stub(:voting?).and_return(true)
           discussion.stub(:history)
-          DiscussionMover.stub(:destination_groups)
         end
 
         it "responds with success" do
@@ -55,16 +54,25 @@ describe DiscussionsController do
           response.should be_success
         end
 
-        it "assigns array with discussion history" do
-          discussion.should_receive(:activity).and_return(['fake'])
+        it "creates a motion_read_log if there is a current motion" do
+          user.should_receive(:update_motion_read_log).with(motion)
           get :show, id: discussion.id
-          assigns(:activity).should eq(['fake'])
         end
 
-        it "assigns array with group destinations for moving" do
-          DiscussionMover.should_receive(:destination_groups).and_return(['fake'])
+        it "creates a discussion_read_log" do
+          user.should_receive(:update_discussion_read_log).with(discussion)
+          get :show, id: discussion.id
+        end
+
+        it "updates the discussion's total view counter" do
+          get :show, id: discussion.id
+          discussion.total_views.should == 1
+        end
+
+        it "assigns array with discussion history" do
+          discussion.should_receive(:activity).and_return(['fake'])
           get :show, id: discussion.id
-          assigns(:destination_groups).should eq(['fake'])
+          assigns(:activity).should eq(['fake'])
         end
       end
     end
@@ -112,50 +120,14 @@ describe DiscussionsController do
       end
     end
 
-    context "moving a discussion" do
-      before do
-        group = create :group
-        Group.stub(:find).and_return(group)
-        DiscussionMover.stub(:can_move?).and_return(true)
-      end
-      it "moves the discussion to the selected group" do
-        discussion.should_receive(:group_id=).with(group.id.to_s)
-        put :move, id: discussion.id, discussion: { group_id: group.id }
-      end
-      it "redirects to the discussion" do
-        put :move, id: discussion.id, discussion: { group_id: group.id }
-        response.should redirect_to(discussion)
-      end
-      it "gives flash success message" do
-        put :move, id: discussion.id, discussion: { group_id: group.id }
-        flash[:success].should =~ /Discussion successfully moved./
-      end
-    end
-
     describe "creating a new proposal" do
-      context "current proposal already exists" do
-        it "redirects to the discussion page" do
-          get :new_proposal, id: discussion.id
-          response.should redirect_to(discussion)
-        end
-        it "displays a proposal already exists message" do
-          get :new_proposal, id: discussion.id
-          flash[:notice].should =~ /A current proposal already exists for this disscussion./
-        end
+      it "is successful" do
+        get :new_proposal, id: discussion.id
+        response.should be_success
       end
-      context "where no current proposal exists" do
-        before do
-          discussion.stub(current_motion: nil)
-          Discussion.stub(:find).with(discussion.id.to_s).and_return(discussion)
-          get :new_proposal, id: discussion.id
-        end
-        it "succeeds" do
-          response.should be_success
-        end
-        it "renders new motion template" do
-          get :new_proposal, id: discussion.id
-          response.should render_template("motions/new")
-        end
+      it "renders new motion template" do
+        get :new_proposal, id: discussion.id
+        response.should render_template("motions/new")
       end
     end
 
diff --git a/spec/controllers/users_controller_spec.rb b/spec/controllers/users_controller_spec.rb
index 7255a5b..117c941 100644
--- a/spec/controllers/users_controller_spec.rb
+++ b/spec/controllers/users_controller_spec.rb
@@ -9,19 +9,6 @@ describe UsersController do
     request.env["HTTP_REFERER"] = previous_url
   end
 
-  describe "#create" do
-    before do
-      req = mock_model(GroupRequest, :accepted? => false, :group => mock(:group))
-      GroupRequest.stub!(:find_by_token).and_return(req)
-      User.stub!(:new).and_return(user)
-    end
-
-    it "generates a username based on user's name" do
-      user.should_receive(:generate_username)
-      post :create, :user => {}
-    end
-  end
-
   describe "#update" do
     it "updates user.name" do
       user.should_receive(:name=).with("Peter Chilltooth")
diff --git a/spec/extras/discussion_mover_spec.rb b/spec/extras/discussion_mover_spec.rb
deleted file mode 100644
index 4ff9354..0000000
--- a/spec/extras/discussion_mover_spec.rb
+++ /dev/null
@@ -1,55 +0,0 @@
-require 'spec_helper'
-
-describe DiscussionMover do
-  describe "#destination_groups(group, user)" do
-    before do
-      @user = create :user
-      @parent = create :group, creator: @user
-      @subgroup = create :group, parent: @parent, creator: @user
-      @subgroup1 = create :group, parent: @parent
-    end
-
-    context "the discussion is in a parent group" do
-      it "returns all the subgroups I am an admin of for this group" do
-        @subgroup1 = create :group, parent: @parent
-        DiscussionMover.destination_groups(@parent, @user).should include([@subgroup.name, @subgroup.id])
-        DiscussionMover.destination_groups(@parent, @user).should_not include([@subgroup1.name, @subgroup1.id])
-      end
-      it "does not return the discussion's group" do
-        DiscussionMover.destination_groups(@parent, @user).should_not include([@parent.name, @parent.id])
-      end
-    end
-    context "the discussion is in a subgroup" do
-      it "the parent is in the returned list" do
-        DiscussionMover.destination_groups(@subgroup, @user).should include([@parent.name, @parent.id])
-      end
-      it "returns all the subgroups of the parent I am an admin of" do
-        @subgroup2 = create :group, parent: @parent, creator: @user
-        DiscussionMover.destination_groups(@subgroup, @user).should include([@subgroup2.name, @subgroup2.id])
-        DiscussionMover.destination_groups(@subgroup, @user).should_not include([@subgroup1.name, @subgroup1.id])
-      end
-      it "does not return the discussion's group" do
-        DiscussionMover.destination_groups(@subgroup, @user).should_not include([@subgroup.name, @subgroup.id])
-      end
-    end
-  end
-
-  describe "#permission_to_move?(user, origin, destination)" do
-    before do
-      @user = create :user
-      @destination = create :group
-    end
-    context "user is admin of not destination" do
-      it "returns false" do
-        DiscussionMover.can_move?(@user, @destination).should == false
-      end
-    end
-    context "user is admin of destiation" do
-      it "returns true" do
-        @destination.add_admin!(@user)
-        DiscussionMover.can_move?(@user, @destination).should == true
-      end
-    end
-  end
-end
-
diff --git a/spec/extras/email_preferences_spec.rb b/spec/extras/email_preferences_spec.rb
deleted file mode 100644
index 2a1e893..0000000
--- a/spec/extras/email_preferences_spec.rb
+++ /dev/null
@@ -1,98 +0,0 @@
-require 'spec_helper'
-
-describe EmailPreferences do
-  subject { EmailPreferences.new(user) }
-
-  def create_membership(options)
-    result = Membership.new
-    result.user = user
-    result.group = options[:group] || group
-    result.subscribed_to_notification_emails = options[:subscribed]
-    result.access_level = 'member'
-    result.save!
-    result
-  end
-
-  def create_membership_for_new_group(name, options)
-    other_group = FactoryGirl.create(:group, name: name)
-    create_membership options.merge(group: other_group)
-  end
-
-  context "when fetching data" do
-    let(:user) { FactoryGirl.create(:user) }
-    let(:group) { FactoryGirl.create(:group) }
-
-    describe "#group_email_preferences" do
-      it "returns an empty array if user has no memberships" do
-        subject.group_email_preferences.should == []
-      end
-
-      it "returns the id of a membership which is subscribed to notifications" do
-        membership = create_membership(subscribed: true)
-        subject.group_email_preferences.should == [membership.id]
-      end
-
-      it "doesn't return the id of a membership which is not subscribed to notifications" do
-        membership = create_membership(subscribed: false)
-        subject.group_email_preferences.should == []
-      end
-    end
-
-    describe "#all_memberships" do
-      it "returns all memberships sorted by group name" do
-        m1 = create_membership_for_new_group("Foo", subscribed: false)
-        m2 = create_membership_for_new_group("Bar", subscribed: true)
-        subject.all_memberships.should == [m2, m1]
-      end
-    end
-  end
-
-  context "when setting data" do
-    describe "#update_attributes" do
-      let(:user) { mock_model(User) }
-
-      it "passes attributes on to user" do
-        attributes = {'a' => 'b'}
-        user.should_receive(:update_attributes).with(attributes)
-        subject.update_attributes(attributes)
-      end
-
-      it "doesn't pass on group_email_preferences" do
-        attributes = {'a' => 'b', 'group_email_preferences' => 'c'}
-        subject.should_receive(:group_email_preferences=).with('c')
-        user.should_receive(:update_attributes).with({'a' => 'b'})
-        subject.update_attributes(attributes)
-      end
-    end
-
-    describe "#group_email_preferences=" do
-      let(:user) { FactoryGirl.create(:user) }
-
-      it "does nothing if given nil" do
-        m1 = create_membership_for_new_group("Foo", subscribed: true)
-        subject.group_email_preferences = nil
-        m1.reload.subscribed_to_notification_emails.should be_true
-      end
-
-      it "disables membership notification if id not included in array" do
-        m1 = create_membership_for_new_group("Foo", subscribed: true)
-        subject.group_email_preferences = ['9232']
-        m1.reload.subscribed_to_notification_emails.should be_false
-      end
-
-      it "enables membership notification if id is included in array" do
-        m1 = create_membership_for_new_group("Foo", subscribed: false)
-        subject.group_email_preferences = [m1.id.to_s]
-        m1.reload.subscribed_to_notification_emails.should be_true
-      end
-
-      it "both enables and disables as required" do
-        m1 = create_membership_for_new_group("Foo", subscribed: false)
-        m2 = create_membership_for_new_group("Bar", subscribed: true)
-        subject.group_email_preferences = [m1.id.to_s]
-        m1.reload.subscribed_to_notification_emails.should be_true
-        m2.reload.subscribed_to_notification_emails.should be_false
-      end
-    end
-  end
-end
diff --git a/spec/extras/view_logger_spec.rb b/spec/extras/view_logger_spec.rb
deleted file mode 100644
index 7ece356..0000000
--- a/spec/extras/view_logger_spec.rb
+++ /dev/null
@@ -1,87 +0,0 @@
-require 'spec_helper'
-
-describe ViewLogger do
-  let(:user) { create(:user) }
-  let(:group) { create(:group) }
-
-  describe "motion_viewed(motion, user)" do
-    before { @motion = create(:motion) }
-
-    it "creates a new motion_read_log" do
-      ViewLogger.motion_viewed(@motion, user)
-      MotionReadLog.count.should == 1
-    end
-
-    it "updates an existing motion_read_log" do
-      time_now = Time.now
-      Time.stub(now: time_now)
-      @motion_read_log = mock_model(MotionReadLog)
-      MotionReadLog.stub_chain(:where, :first).and_return(@motion_read_log)
-      @motion_read_log.stub(:save!).and_return(true)
-      @motion_read_log.should_receive(:update_attributes).
-        with(hash_including(motion_last_viewed_at: time_now))
-      ViewLogger.motion_viewed(@motion, user)
-    end
-  end
-
-  describe "discussion_viewed(discussion, user)" do
-    before { @discussion = create(:discussion, group: group) }
-
-    it "creates a new discussion_read_log" do
-      ViewLogger.discussion_viewed(@discussion, user)
-      DiscussionReadLog.count.should == 1
-    end
-
-    it "updates an existing discussion_read_log" do
-      time_now = Time.now
-      Time.stub(now: time_now)
-      discussion_read_log = mock_model(DiscussionReadLog)
-      DiscussionReadLog.stub_chain(:where, :first).and_return(discussion_read_log)
-      discussion_read_log.stub(:save!).and_return(true)
-      discussion_read_log.should_receive(:update_attributes).
-        with(hash_including(discussion_last_viewed_at: time_now))
-      ViewLogger.discussion_viewed(@discussion, user)
-    end
-
-    it "updates the total views" do
-      @discussion.should_receive(:update_total_views)
-      ViewLogger.discussion_viewed(@discussion, user)
-    end
-  end
-
-  describe "group_viewed(group, user)" do
-    context "a membership exists" do
-      before do
-        @membership = create(:membership, group: group, user: user)
-        user.stub(:group_membership).with(group).and_return(@membership)
-        @membership.stub(:save!)
-      end
-
-      it "stores the current time in the membership" do
-        @membership.should_receive(:group_last_viewed_at)
-        ViewLogger.group_viewed(group, user)
-      end
-    end
-  end
-
-  describe "#delete_all_logs_for(user)" do
-    before do
-      user1 = create(:user)
-      @motion = create(:motion)
-      @discussion = create(:discussion)
-      ViewLogger.motion_viewed(@motion, user)
-      ViewLogger.discussion_viewed(@discussion, user)
-      ViewLogger.motion_viewed(@motion, user1)
-      ViewLogger.discussion_viewed(@discussion, user1)
-    end
-    it "should remove all logs from the MotionReadLog" do
-      ViewLogger.delete_all_logs_for(user.id)
-      MotionReadLog.count.should == 1
-    end
-    it "should remove all logs from the DiscusionReadLog" do
-      ViewLogger.delete_all_logs_for(user.id)
-      DiscussionReadLog.count.should == 1
-    end
-  end
-
-end
diff --git a/spec/helpers/motion_helper_spec.rb b/spec/helpers/motion_helper_spec.rb
deleted file mode 100644
index 7cbab96..0000000
--- a/spec/helpers/motion_helper_spec.rb
+++ /dev/null
@@ -1,31 +0,0 @@
- require 'spec_helper'
-
-describe MotionsHelper do
-  describe "display_vote_buttons?(motion)" do
-    before do
-      @user = stub :user
-      @motion = mock_model(Motion)
-      @motion.stub(:voting?).and_return(true)
-      @motion.stub(:user_has_voted?).and_return(false)
-      @motion.stub_chain(:group, :users_include?).and_return(true)
-    end
-    context "motion closed" do
-      before { @motion.stub(:voting?).and_return(false) }
-      it "returns false" do
-        display_vote_buttons?(@motion, @user).should == false
-      end
-    end
-    context "user has voted" do
-      before { @motion.stub(:user_has_voted?).and_return(true) }
-      it "returns false" do
-        display_vote_buttons?(@motion, @user).should == false
-      end
-    end
-    context "user does not belong to the group" do
-      before { @motion.stub_chain(:group, :users_include?).and_return(false)}
-      it "returns false" do
-        display_vote_buttons?(@motion, @user).should == false
-      end
-    end
-  end
-end
diff --git a/spec/models/ability_spec.rb b/spec/models/ability_spec.rb
index 837791f..571fc47 100644
--- a/spec/models/ability_spec.rb
+++ b/spec/models/ability_spec.rb
@@ -36,7 +36,6 @@ describe "User abilities" do
     it { should be_able_to(:show_description_history, discussion) }
     it { should be_able_to(:preview_version, discussion) }
     it { should be_able_to(:update_version, discussion) }
-    it { should_not be_able_to(:move, discussion) }
     it { should be_able_to(:index, Discussion) }
     it { should be_able_to(:destroy, user_comment) }
     it { should_not be_able_to(:destroy, discussion) }
@@ -114,7 +113,6 @@ describe "User abilities" do
     it { should be_able_to(:update, group) }
     it { should be_able_to(:email_members, group) }
     it { should be_able_to(:destroy, discussion) }
-    it { should be_able_to(:move, discussion) }
     it { should be_able_to(:make_admin, @membership_request) }
     it { should be_able_to(:remove_admin, @membership_request) }
     it { should be_able_to(:destroy, @other_user_membership) }
@@ -154,7 +152,6 @@ describe "User abilities" do
     it { should_not be_able_to(:add_members, group) }
     it { should_not be_able_to(:new_proposal, discussion) }
     it { should_not be_able_to(:add_comment, discussion) }
-    it { should_not be_able_to(:move, discussion) }
     it { should be_able_to(:index, Discussion) }
     it { should_not be_able_to(:destroy, discussion) }
     it { should_not be_able_to(:destroy, another_user_comment) }
diff --git a/spec/models/user_spec.rb b/spec/models/user_spec.rb
index 94b7d08..200366d 100644
--- a/spec/models/user_spec.rb
+++ b/spec/models/user_spec.rb
@@ -228,6 +228,48 @@ describe User do
     User.find_by_email("foObAr@exaMPLE.coM").should == user
   end
 
+  it "can create a new motion_read_log" do
+    @motion = create(:motion)
+    user.update_motion_read_log(@motion)
+    MotionReadLog.count.should == 1
+  end
+
+  it "updates an existing motion_read_log" do
+    @motion = create(:motion)
+    @motion_read_log = mock_model(MotionReadLog)
+    MotionReadLog.stub_chain(:where, :first).and_return(@motion_read_log)
+    @motion_read_log.stub(:save!).and_return(true)
+    @motion_read_log.should_receive(:motion_last_viewed_at=)
+    user.update_motion_read_log(@motion)
+  end
+
+  it "can create a new discussion_read_log" do
+    @discussion = create(:discussion, group: group)
+    user.update_discussion_read_log(@discussion)
+    DiscussionReadLog.count.should == 1
+  end
+
+  it "can update an existing discussion_read_log" do
+    @discussion = create :discussion, group: group
+    @discussion_read_log = mock_model(DiscussionReadLog)
+    DiscussionReadLog.stub_chain(:where, :first).and_return(@discussion_read_log)
+    @discussion_read_log.stub(:save!).and_return(true)
+    @discussion_read_log.should_receive(:discussion_last_viewed_at=)
+    user.update_discussion_read_log(@discussion)
+  end
+
+  it "can update group last_viewed_at" do
+    membership = create :membership, group: group, user: user
+    user.stub(:group_membership).with(group).and_return(membership)
+    time_now = Time.now()
+    Time.stub(:now).and_return(time_now)
+    membership.stub(:save!).and_return(true)
+
+    membership.should_receive(:group_last_viewed_at=).with(time_now)
+
+    user.update_group_last_viewed_at(group)
+  end
+
   describe "mark_notifications_as_viewed" do
     before do
       @notif1 = Notification.create!(:event => mock_model(Event), :user => user)
diff --git a/spec/spec_helper.rb b/spec/spec_helper.rb
index 2af93d6..d8ab939 100644
--- a/spec/spec_helper.rb
+++ b/spec/spec_helper.rb
@@ -18,16 +18,9 @@ Spork.prefork do
   Spork.trap_method(Rails::Application::RoutesReloader, :reload!) if Spork.using_spork?
 
   require File.expand_path("../../config/environment", __FILE__)
-
-  require 'vcr'
-  VCR.configure do |c|
-    c.cassette_library_dir = 'spec/support/vcr_cassettes'
-    c.hook_into :webmock
-    c.ignore_localhost = true
-  end
-
   require 'rspec/rails'
   require 'rspec/autorun'
+
   RSpec.configure do |config|
     config.mock_with :rspec
 
